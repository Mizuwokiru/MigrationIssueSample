// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MigrationIssueSample;

namespace MigrationIssueSample.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    [Migration("20201121155315_Initial99")]
    partial class Initial99
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MigrationIssueSample.Entities.AccountCh2", b =>
                {
                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.ToTable("account_ch2");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.AdditionalBox", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int")
                        .HasColumnName("timestamp");

                    b.ToTable("AdditionalBox");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Agit", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("AuctionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("auction_date")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("AuctionId")
                        .HasColumnType("int")
                        .HasColumnName("auction_id");

                    b.Property<int?>("AuctionPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("auction_price")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CostFail")
                        .HasColumnType("int")
                        .HasColumnName("cost_fail");

                    b.Property<byte?>("Hatcher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("hatcher")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("HpStove")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("hp_stove")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("HpStoveExpire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hp_stove_expire")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("LastCancel")
                        .HasColumnType("int")
                        .HasColumnName("last_cancel");

                    b.Property<int?>("LastPrice")
                        .HasColumnType("int")
                        .HasColumnName("last_price");

                    b.Property<byte?>("MpFlame")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("mp_flame")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MpFlameExpire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mp_flame_expire")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("NextCost")
                        .HasColumnType("int")
                        .HasColumnName("next_cost");

                    b.Property<int?>("NextWarTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("next_war_time")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PledgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pledge_id")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ShopIncome")
                        .HasColumnType("int")
                        .HasColumnName("shop_income");

                    b.Property<int>("ShopIncomeTemp")
                        .HasColumnType("int")
                        .HasColumnName("shop_income_temp");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((2))");

                    b.Property<short>("TaxChildRate")
                        .HasColumnType("smallint")
                        .HasColumnName("tax_child_rate");

                    b.Property<short>("TaxChildRateToChange")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("tax_child_rate_to_change")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("TaxRate")
                        .HasColumnType("int")
                        .HasColumnName("tax_rate");

                    b.Property<short>("TaxRateToChange")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("tax_rate_to_change")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int?>("TeamBattleStatus")
                        .HasColumnType("int")
                        .HasColumnName("team_battle_status");

                    b.Property<int?>("TeleportExpire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teleport_expire")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("TeleportLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teleport_level")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.ToTable("agit");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.AgitAdena", b =>
                {
                    b.Property<int?>("Adena")
                        .HasColumnType("int")
                        .HasColumnName("adena");

                    b.Property<int?>("AgitId")
                        .HasColumnType("int")
                        .HasColumnName("agit_id");

                    b.Property<int?>("AuctionId")
                        .HasColumnType("int")
                        .HasColumnName("auction_id");

                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_id")
                        .UseIdentityColumn();

                    b.Property<int?>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int?>("Reason")
                        .HasColumnType("int")
                        .HasColumnName("reason");

                    b.HasIndex(new[] { "PledgeId", "AuctionId", "Reason" }, "IX_agit_adena");

                    b.ToTable("agit_adena");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.AgitAuction", b =>
                {
                    b.Property<int?>("AcceptedBid")
                        .HasColumnType("int")
                        .HasColumnName("accepted_bid");

                    b.Property<int?>("AgitId")
                        .HasColumnType("int")
                        .HasColumnName("agit_id");

                    b.Property<string>("AuctionDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("auction_desc")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("auction_id")
                        .UseIdentityColumn();

                    b.Property<int?>("AuctionTax")
                        .HasColumnType("int")
                        .HasColumnName("auction_tax");

                    b.Property<int?>("AuctionTime")
                        .HasColumnType("int")
                        .HasColumnName("auction_time");

                    b.Property<int?>("MinPrice")
                        .HasColumnType("int")
                        .HasColumnName("min_price");

                    b.HasIndex(new[] { "AgitId", "AuctionTime" }, "IX_agit_auction_1");

                    b.HasIndex(new[] { "AuctionId" }, "IX_agit_auction_2");

                    b.ToTable("agit_auction");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.AgitBid", b =>
                {
                    b.Property<DateTime?>("AttendDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("attend_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AttendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attend_id")
                        .UseIdentityColumn();

                    b.Property<int?>("AttendPledgeId")
                        .HasColumnType("int")
                        .HasColumnName("attend_pledge_id");

                    b.Property<int?>("AttendPrice")
                        .HasColumnType("int")
                        .HasColumnName("attend_price");

                    b.Property<int?>("AttendTime")
                        .HasColumnType("int")
                        .HasColumnName("attend_time");

                    b.Property<int?>("AuctionId")
                        .HasColumnType("int")
                        .HasColumnName("auction_id");

                    b.HasIndex(new[] { "AuctionId" }, "IX_agit_auction");

                    b.HasIndex(new[] { "AuctionId", "AttendPledgeId" }, "IX_agit_bid")
                        .IsUnique()
                        .HasFilter("[auction_id] IS NOT NULL AND [attend_pledge_id] IS NOT NULL");

                    b.HasIndex(new[] { "AttendPrice", "AttendDate" }, "IX_agit_price");

                    b.ToTable("agit_bid");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.AgitDeco", b =>
                {
                    b.Property<int>("AgitId")
                        .HasColumnType("int")
                        .HasColumnName("agit_id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int?>("Expire")
                        .HasColumnType("int")
                        .HasColumnName("expire");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasKey("AgitId", "Type");

                    b.ToTable("agit_deco");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Alliance", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("CrestId")
                        .HasColumnType("int")
                        .HasColumnName("crest_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("MasterPledgeId")
                        .HasColumnType("int")
                        .HasColumnName("master_pledge_id");

                    b.Property<int>("OustTime")
                        .HasColumnType("int")
                        .HasColumnName("oust_time");

                    b.HasKey("Name");

                    b.ToTable("Alliance");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Auction", b =>
                {
                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("auction_id")
                        .UseIdentityColumn();

                    b.Property<int>("Augmentation")
                        .HasColumnType("int")
                        .HasColumnName("augmentation");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("ExpireTime")
                        .HasColumnType("int")
                        .HasColumnName("expire_time");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<int>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("seller_id");

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("seller_name")
                        .HasDefaultValueSql("(N'')");

                    b.ToTable("Auction");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.AuctionPayment", b =>
                {
                    b.Property<string>("Buyer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("buyer")
                        .HasDefaultValueSql("(N'')");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("ItemAmount")
                        .HasColumnType("int")
                        .HasColumnName("item_amount");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("job_id")
                        .UseIdentityColumn();

                    b.Property<int>("PriceAmount")
                        .HasColumnType("int")
                        .HasColumnName("price_amount");

                    b.Property<int>("PriceId")
                        .HasColumnType("int")
                        .HasColumnName("price_id");

                    b.ToTable("AuctionPayment");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.BannedAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reason")
                        .HasDefaultValueSql("(N'')");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int")
                        .HasColumnName("timestamp");

                    b.HasKey("AccountId");

                    b.ToTable("banned_account");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.BannedHardwareId", b =>
                {
                    b.Property<string>("Account")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("account")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("Gm")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("gm")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("HardwareId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("hardware_id")
                        .HasDefaultValueSql("(N'00000000000000000000000000000000')");

                    b.Property<int>("Timeout")
                        .HasColumnType("int")
                        .HasColumnName("timeout");

                    b.ToTable("BannedHardwareId");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Bookmark", b =>
                {
                    b.Property<int>("Bookmarkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bookmarkid")
                        .UseIdentityColumn();

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("World")
                        .HasColumnType("int")
                        .HasColumnName("world");

                    b.Property<int?>("X")
                        .HasColumnType("int")
                        .HasColumnName("x");

                    b.Property<int?>("Y")
                        .HasColumnType("int")
                        .HasColumnName("y");

                    b.Property<int?>("Z")
                        .HasColumnType("int")
                        .HasColumnName("z");

                    b.HasIndex(new[] { "CharId" }, "ix_bookmark")
                        .HasFillFactor(90);

                    b.ToTable("bookmark");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.BuilderAccount", b =>
                {
                    b.Property<string>("AccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int>("DefaultBuilder")
                        .HasColumnType("int")
                        .HasColumnName("default_builder");

                    b.HasKey("AccountName")
                        .HasName("PK_account_builder");

                    b.ToTable("builder_account");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Castle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CropIncome")
                        .HasColumnType("int")
                        .HasColumnName("crop_income");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("NextWarTime")
                        .HasColumnType("int")
                        .HasColumnName("next_war_time");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int>("ShopIncome")
                        .HasColumnType("int")
                        .HasColumnName("shop_income");

                    b.Property<int>("ShopIncomeTemp")
                        .HasColumnType("int")
                        .HasColumnName("shop_income_temp");

                    b.Property<int>("SiegeElapsedTime")
                        .HasColumnType("int")
                        .HasColumnName("siege_elapsed_time");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<int>("TaxChildRate")
                        .HasColumnType("int")
                        .HasColumnName("tax_child_rate");

                    b.Property<short>("TaxChildRateToChange")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("tax_child_rate_to_change")
                        .HasDefaultValueSql("((-1))");

                    b.Property<short>("TaxRate")
                        .HasColumnType("smallint")
                        .HasColumnName("tax_rate");

                    b.Property<short>("TaxRateToChange")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("tax_rate_to_change")
                        .HasDefaultValueSql("((-1))");

                    b.Property<byte>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("type")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("castle");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.CastleCrop", b =>
                {
                    b.Property<int>("CastleId")
                        .HasColumnType("int")
                        .HasColumnName("castle_id");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int>("DropRate")
                        .HasColumnType("int")
                        .HasColumnName("dropRate");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.HasKey("CastleId", "ItemType");

                    b.ToTable("castle_crop");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.CastleTax", b =>
                {
                    b.Property<int>("IncomeUpdateT")
                        .HasColumnType("int")
                        .HasColumnName("income_update_t");

                    b.Property<int>("ManorResetT")
                        .HasColumnType("int")
                        .HasColumnName("manor_reset_t");

                    b.Property<int>("TaxChangeT")
                        .HasColumnType("int")
                        .HasColumnName("tax_change_t");

                    b.ToTable("castle_tax");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.CastleWar", b =>
                {
                    b.Property<int>("CastleId")
                        .HasColumnType("int")
                        .HasColumnName("castle_id");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int?>("ProposeTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("propose_time")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnName("type");

                    b.ToTable("castle_war");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Ch2Temp", b =>
                {
                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("last_login");

                    b.Property<int?>("LastWorld")
                        .HasColumnType("int")
                        .HasColumnName("last_world");

                    b.Property<int>("Uid")
                        .HasColumnType("int")
                        .HasColumnName("uid");

                    b.ToTable("ch2_temp");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Ch3LottoChar", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("ItemCount")
                        .HasColumnType("int")
                        .HasColumnName("item_count");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("NumberFlag")
                        .HasColumnType("int")
                        .HasColumnName("number_flag");

                    b.Property<int?>("RoundNumber")
                        .HasColumnType("int")
                        .HasColumnName("round_number");

                    b.HasKey("CharId")
                        .HasName("PK__ch3_lott__2D4B2339B4154CAD");

                    b.ToTable("ch3_lotto_char");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.CharPet", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("pet_id");

                    b.ToTable("char_pet");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.CharacterLock", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("CodeHash")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(33)
                        .HasColumnType("nvarchar(33)")
                        .HasColumnName("code_hash")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("HardwareId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(33)
                        .HasColumnType("nvarchar(33)")
                        .HasColumnName("hardware_id")
                        .HasDefaultValueSql("(N'')");

                    b.ToTable("CharacterLock");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ClassList", b =>
                {
                    b.Property<short?>("Class")
                        .HasColumnType("smallint")
                        .HasColumnName("class");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte?>("Race")
                        .HasColumnType("tinyint")
                        .HasColumnName("race");

                    b.ToTable("class_list");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ControlTower", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("ControlLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("control_level")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Hp")
                        .HasColumnType("int")
                        .HasColumnName("hp");

                    b.Property<int>("ResidenceId")
                        .HasColumnType("int")
                        .HasColumnName("residence_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Name")
                        .HasName("PK__control___72E12F1A05A8BA76");

                    b.ToTable("control_tower");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.DbnpcMaker", b =>
                {
                    b.Property<string>("Comment")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("comment")
                        .HasDefaultValueSql("(N'')");

                    b.Property<int>("EndTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("end_time")
                        .HasDefaultValueSql("(datediff(second,'1970-01-01 00:00:00',getutcdate())+(2592000))");

                    b.Property<int>("Heading")
                        .HasColumnType("int")
                        .HasColumnName("heading");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("NpcId")
                        .HasColumnType("int")
                        .HasColumnName("npc_id");

                    b.Property<int>("SpawnX")
                        .HasColumnType("int")
                        .HasColumnName("spawn_x");

                    b.Property<int>("SpawnY")
                        .HasColumnType("int")
                        .HasColumnName("spawn_y");

                    b.Property<int>("SpawnZ")
                        .HasColumnType("int")
                        .HasColumnName("spawn_z");

                    b.Property<int>("StartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("start_time")
                        .HasDefaultValueSql("(datediff(second,'1970-01-01 00:00:00',getutcdate()))");

                    b.ToTable("DBNpcMaker");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Door", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("Hp")
                        .HasColumnType("int")
                        .HasColumnName("hp");

                    b.Property<int?>("MaxHp")
                        .HasColumnType("int")
                        .HasColumnName("max_hp");

                    b.HasKey("Name");

                    b.ToTable("door");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.DtAdenaRankTemp", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("amount");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Rank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rank")
                        .UseIdentityColumn();

                    b.ToTable("dt_adena_rank_temp");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ErrItem1", b =>
                {
                    b.Property<int?>("Actor")
                        .HasColumnType("int")
                        .HasColumnName("actor");

                    b.Property<int?>("EtcNum5")
                        .HasColumnType("int")
                        .HasColumnName("etc_num5");

                    b.Property<string>("StrActor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("str_actor")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.ToTable("err_item_1");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ErrPet1928", b =>
                {
                    b.Property<DateTime?>("ActTime")
                        .HasColumnType("datetime")
                        .HasColumnName("act_time");

                    b.Property<int?>("Actor")
                        .HasColumnType("int")
                        .HasColumnName("actor");

                    b.Property<int?>("ActorAccount")
                        .HasColumnType("int")
                        .HasColumnName("actor_account");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("At")
                        .HasColumnType("datetime")
                        .HasColumnName("at");

                    b.Property<byte>("Bless")
                        .HasColumnType("tinyint")
                        .HasColumnName("bless");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("Eroded")
                        .HasColumnType("int")
                        .HasColumnName("eroded");

                    b.Property<double?>("EtcNum1")
                        .HasColumnType("float")
                        .HasColumnName("etc_num1");

                    b.Property<int?>("EtcNum10")
                        .HasColumnType("int")
                        .HasColumnName("etc_num10");

                    b.Property<double?>("EtcNum2")
                        .HasColumnType("float")
                        .HasColumnName("etc_num2");

                    b.Property<int?>("EtcNum3")
                        .HasColumnType("int")
                        .HasColumnName("etc_num3");

                    b.Property<int?>("EtcNum4")
                        .HasColumnType("int")
                        .HasColumnName("etc_num4");

                    b.Property<int?>("EtcNum5")
                        .HasColumnType("int")
                        .HasColumnName("etc_num5");

                    b.Property<int?>("EtcNum6")
                        .HasColumnType("int")
                        .HasColumnName("etc_num6");

                    b.Property<int?>("EtcNum7")
                        .HasColumnType("int")
                        .HasColumnName("etc_num7");

                    b.Property<int?>("EtcNum8")
                        .HasColumnType("int")
                        .HasColumnName("etc_num8");

                    b.Property<int?>("EtcNum9")
                        .HasColumnType("int")
                        .HasColumnName("etc_num9");

                    b.Property<string>("EtcStr1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("etc_str1")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("EtcStr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("etc_str2")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("EtcStr3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("etc_str3")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Ident")
                        .HasColumnType("tinyint")
                        .HasColumnName("ident");

                    b.Property<int?>("Iid")
                        .HasColumnType("int")
                        .HasColumnName("iid");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int?>("LocationX")
                        .HasColumnType("int")
                        .HasColumnName("location_x");

                    b.Property<int?>("LocationY")
                        .HasColumnType("int")
                        .HasColumnName("location_y");

                    b.Property<int?>("LocationZ")
                        .HasColumnType("int")
                        .HasColumnName("location_z");

                    b.Property<short?>("LogId")
                        .HasColumnType("smallint")
                        .HasColumnName("log_id");

                    b.Property<string>("StrActor")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)")
                        .HasColumnName("STR_actor")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrActorAccount")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("STR_actor_account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrTarget")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)")
                        .HasColumnName("STR_target")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrTargetAccount")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("STR_target_account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("Target")
                        .HasColumnType("int")
                        .HasColumnName("target");

                    b.Property<int?>("TargetAccount")
                        .HasColumnType("int")
                        .HasColumnName("target_account");

                    b.Property<int>("Uiid")
                        .HasColumnType("int")
                        .HasColumnName("uiid");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.Property<byte>("Wished")
                        .HasColumnType("tinyint")
                        .HasColumnName("wished");

                    b.ToTable("err_pet1_9_28");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ErrPet1930", b =>
                {
                    b.Property<DateTime?>("ActTime")
                        .HasColumnType("datetime")
                        .HasColumnName("act_time");

                    b.Property<int?>("Actor")
                        .HasColumnType("int")
                        .HasColumnName("actor");

                    b.Property<int?>("ActorAccount")
                        .HasColumnType("int")
                        .HasColumnName("actor_account");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("At")
                        .HasColumnType("datetime")
                        .HasColumnName("at");

                    b.Property<byte>("Bless")
                        .HasColumnType("tinyint")
                        .HasColumnName("bless");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("Eroded")
                        .HasColumnType("int")
                        .HasColumnName("eroded");

                    b.Property<double?>("EtcNum1")
                        .HasColumnType("float")
                        .HasColumnName("etc_num1");

                    b.Property<int?>("EtcNum10")
                        .HasColumnType("int")
                        .HasColumnName("etc_num10");

                    b.Property<double?>("EtcNum2")
                        .HasColumnType("float")
                        .HasColumnName("etc_num2");

                    b.Property<int?>("EtcNum3")
                        .HasColumnType("int")
                        .HasColumnName("etc_num3");

                    b.Property<int?>("EtcNum4")
                        .HasColumnType("int")
                        .HasColumnName("etc_num4");

                    b.Property<int?>("EtcNum5")
                        .HasColumnType("int")
                        .HasColumnName("etc_num5");

                    b.Property<int?>("EtcNum6")
                        .HasColumnType("int")
                        .HasColumnName("etc_num6");

                    b.Property<int?>("EtcNum7")
                        .HasColumnType("int")
                        .HasColumnName("etc_num7");

                    b.Property<int?>("EtcNum8")
                        .HasColumnType("int")
                        .HasColumnName("etc_num8");

                    b.Property<int?>("EtcNum9")
                        .HasColumnType("int")
                        .HasColumnName("etc_num9");

                    b.Property<string>("EtcStr1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("etc_str1")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("EtcStr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("etc_str2")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("EtcStr3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("etc_str3")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Ident")
                        .HasColumnType("tinyint")
                        .HasColumnName("ident");

                    b.Property<int?>("Iid")
                        .HasColumnType("int")
                        .HasColumnName("iid");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int?>("LocationX")
                        .HasColumnType("int")
                        .HasColumnName("location_x");

                    b.Property<int?>("LocationY")
                        .HasColumnType("int")
                        .HasColumnName("location_y");

                    b.Property<int?>("LocationZ")
                        .HasColumnType("int")
                        .HasColumnName("location_z");

                    b.Property<short?>("LogId")
                        .HasColumnType("smallint")
                        .HasColumnName("log_id");

                    b.Property<string>("StrActor")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)")
                        .HasColumnName("STR_actor")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrActorAccount")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("STR_actor_account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrTarget")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)")
                        .HasColumnName("STR_target")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrTargetAccount")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("STR_target_account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("Target")
                        .HasColumnType("int")
                        .HasColumnName("target");

                    b.Property<int?>("TargetAccount")
                        .HasColumnType("int")
                        .HasColumnName("target_account");

                    b.Property<int>("Uiid")
                        .HasColumnType("int")
                        .HasColumnName("uiid");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.Property<byte>("Wished")
                        .HasColumnType("tinyint")
                        .HasColumnName("wished");

                    b.ToTable("err_pet1_9_30");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ErrPet2928", b =>
                {
                    b.Property<DateTime?>("ActTime")
                        .HasColumnType("datetime")
                        .HasColumnName("act_time");

                    b.Property<int?>("Actor")
                        .HasColumnType("int")
                        .HasColumnName("actor");

                    b.Property<int?>("ActorAccount")
                        .HasColumnType("int")
                        .HasColumnName("actor_account");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("At")
                        .HasColumnType("datetime")
                        .HasColumnName("at");

                    b.Property<byte>("Bless")
                        .HasColumnType("tinyint")
                        .HasColumnName("bless");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("Eroded")
                        .HasColumnType("int")
                        .HasColumnName("eroded");

                    b.Property<double?>("EtcNum1")
                        .HasColumnType("float")
                        .HasColumnName("etc_num1");

                    b.Property<int?>("EtcNum10")
                        .HasColumnType("int")
                        .HasColumnName("etc_num10");

                    b.Property<double?>("EtcNum2")
                        .HasColumnType("float")
                        .HasColumnName("etc_num2");

                    b.Property<int?>("EtcNum3")
                        .HasColumnType("int")
                        .HasColumnName("etc_num3");

                    b.Property<int?>("EtcNum4")
                        .HasColumnType("int")
                        .HasColumnName("etc_num4");

                    b.Property<int?>("EtcNum5")
                        .HasColumnType("int")
                        .HasColumnName("etc_num5");

                    b.Property<int?>("EtcNum6")
                        .HasColumnType("int")
                        .HasColumnName("etc_num6");

                    b.Property<int?>("EtcNum7")
                        .HasColumnType("int")
                        .HasColumnName("etc_num7");

                    b.Property<int?>("EtcNum8")
                        .HasColumnType("int")
                        .HasColumnName("etc_num8");

                    b.Property<int?>("EtcNum9")
                        .HasColumnType("int")
                        .HasColumnName("etc_num9");

                    b.Property<string>("EtcStr1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("etc_str1")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("EtcStr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("etc_str2")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("EtcStr3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("etc_str3")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Ident")
                        .HasColumnType("tinyint")
                        .HasColumnName("ident");

                    b.Property<int?>("Iid")
                        .HasColumnType("int")
                        .HasColumnName("iid");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int?>("LocationX")
                        .HasColumnType("int")
                        .HasColumnName("location_x");

                    b.Property<int?>("LocationY")
                        .HasColumnType("int")
                        .HasColumnName("location_y");

                    b.Property<int?>("LocationZ")
                        .HasColumnType("int")
                        .HasColumnName("location_z");

                    b.Property<short?>("LogId")
                        .HasColumnType("smallint")
                        .HasColumnName("log_id");

                    b.Property<string>("StrActor")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)")
                        .HasColumnName("STR_actor")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrActorAccount")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("STR_actor_account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrTarget")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)")
                        .HasColumnName("STR_target")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrTargetAccount")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("STR_target_account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("Target")
                        .HasColumnType("int")
                        .HasColumnName("target");

                    b.Property<int?>("TargetAccount")
                        .HasColumnType("int")
                        .HasColumnName("target_account");

                    b.Property<int>("Uiid")
                        .HasColumnType("int")
                        .HasColumnName("uiid");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.Property<byte>("Wished")
                        .HasColumnType("tinyint")
                        .HasColumnName("wished");

                    b.ToTable("err_pet2_9_28");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ErrPet2930", b =>
                {
                    b.Property<DateTime?>("ActTime")
                        .HasColumnType("datetime")
                        .HasColumnName("act_time");

                    b.Property<int?>("Actor")
                        .HasColumnType("int")
                        .HasColumnName("actor");

                    b.Property<int?>("ActorAccount")
                        .HasColumnType("int")
                        .HasColumnName("actor_account");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("At")
                        .HasColumnType("datetime")
                        .HasColumnName("at");

                    b.Property<byte>("Bless")
                        .HasColumnType("tinyint")
                        .HasColumnName("bless");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("Eroded")
                        .HasColumnType("int")
                        .HasColumnName("eroded");

                    b.Property<double?>("EtcNum1")
                        .HasColumnType("float")
                        .HasColumnName("etc_num1");

                    b.Property<int?>("EtcNum10")
                        .HasColumnType("int")
                        .HasColumnName("etc_num10");

                    b.Property<double?>("EtcNum2")
                        .HasColumnType("float")
                        .HasColumnName("etc_num2");

                    b.Property<int?>("EtcNum3")
                        .HasColumnType("int")
                        .HasColumnName("etc_num3");

                    b.Property<int?>("EtcNum4")
                        .HasColumnType("int")
                        .HasColumnName("etc_num4");

                    b.Property<int?>("EtcNum5")
                        .HasColumnType("int")
                        .HasColumnName("etc_num5");

                    b.Property<int?>("EtcNum6")
                        .HasColumnType("int")
                        .HasColumnName("etc_num6");

                    b.Property<int?>("EtcNum7")
                        .HasColumnType("int")
                        .HasColumnName("etc_num7");

                    b.Property<int?>("EtcNum8")
                        .HasColumnType("int")
                        .HasColumnName("etc_num8");

                    b.Property<int?>("EtcNum9")
                        .HasColumnType("int")
                        .HasColumnName("etc_num9");

                    b.Property<string>("EtcStr1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("etc_str1")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("EtcStr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("etc_str2")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("EtcStr3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("etc_str3")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Ident")
                        .HasColumnType("tinyint")
                        .HasColumnName("ident");

                    b.Property<int?>("Iid")
                        .HasColumnType("int")
                        .HasColumnName("iid");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int?>("LocationX")
                        .HasColumnType("int")
                        .HasColumnName("location_x");

                    b.Property<int?>("LocationY")
                        .HasColumnType("int")
                        .HasColumnName("location_y");

                    b.Property<int?>("LocationZ")
                        .HasColumnType("int")
                        .HasColumnName("location_z");

                    b.Property<short?>("LogId")
                        .HasColumnType("smallint")
                        .HasColumnName("log_id");

                    b.Property<string>("StrActor")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)")
                        .HasColumnName("STR_actor")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrActorAccount")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("STR_actor_account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrTarget")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)")
                        .HasColumnName("STR_target")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("StrTargetAccount")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("STR_target_account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("Target")
                        .HasColumnType("int")
                        .HasColumnName("target");

                    b.Property<int?>("TargetAccount")
                        .HasColumnType("int")
                        .HasColumnName("target_account");

                    b.Property<int>("Uiid")
                        .HasColumnType("int")
                        .HasColumnName("uiid");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.Property<byte>("Wished")
                        .HasColumnType("tinyint")
                        .HasColumnName("wished");

                    b.ToTable("err_pet2_9_30");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ErrSkill1", b =>
                {
                    b.Property<int?>("Class")
                        .HasColumnType("int")
                        .HasColumnName("class");

                    b.Property<string>("ClassName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("class_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("Lev")
                        .HasColumnType("int")
                        .HasColumnName("lev");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skill_id");

                    b.Property<string>("SkillName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("skill_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasIndex(new[] { "Class", "Lev" }, "IX_err_table2");

                    b.ToTable("err_skill_1");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.EventItem", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("LogDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("log_date")
                        .HasDefaultValueSql("(getdate())");

                    b.ToTable("event_items");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.EventPoint", b =>
                {
                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<double?>("GroupPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("group_point")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<int>("PointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("point_id")
                        .UseIdentityColumn();

                    b.HasIndex(new[] { "GroupId" }, "IX_event_point")
                        .IsClustered()
                        .HasFillFactor(90);

                    b.ToTable("event_point");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ItemAmount0Backup", b =>
                {
                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int?>("Bless")
                        .HasColumnType("int")
                        .HasColumnName("bless");

                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int?>("Eroded")
                        .HasColumnType("int")
                        .HasColumnName("eroded");

                    b.Property<int?>("Ident")
                        .HasColumnType("int")
                        .HasColumnName("ident");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int?>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.Property<int?>("Wished")
                        .HasColumnType("int")
                        .HasColumnName("wished");

                    b.ToTable("item_amount0_backup");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ItemClassidNormal", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.HasKey("Id");

                    b.ToTable("item_classid_normal");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ItemDatum", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Consumetype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("consumetype")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("desc")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("IsQuest")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Logdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("logdate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id", "Consumetype" }, "IX_ItemData")
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "Name" }, "idx_itemdata_name")
                        .HasFillFactor(90);

                    b.ToTable("ItemData");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ItemDelivery", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("ItemAmount")
                        .HasColumnType("int")
                        .HasColumnName("item_amount");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("job_id")
                        .UseIdentityColumn();

                    b.ToTable("ItemDelivery");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ItemList", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.ToTable("item_list");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ItemMarketPrice", b =>
                {
                    b.Property<double>("AvgPrice")
                        .HasColumnType("float")
                        .HasColumnName("avg_price");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("Frequency")
                        .HasColumnType("int")
                        .HasColumnName("frequency");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.ToTable("item_market_price");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ItemTemp", b =>
                {
                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.ToTable("item_temp");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.KillDeathStat", b =>
                {
                    b.Property<int>("DeathTime")
                        .HasColumnType("int")
                        .HasColumnName("death_time");

                    b.Property<int>("KillerClassId")
                        .HasColumnType("int")
                        .HasColumnName("killer_class_id");

                    b.Property<int>("KillerCp")
                        .HasColumnType("int")
                        .HasColumnName("killer_cp");

                    b.Property<int>("KillerHp")
                        .HasColumnType("int")
                        .HasColumnName("killer_hp");

                    b.Property<int>("KillerId")
                        .HasColumnType("int")
                        .HasColumnName("killer_id");

                    b.Property<int>("KillerLevel")
                        .HasColumnType("int")
                        .HasColumnName("killer_level");

                    b.Property<int>("KillerMaxCp")
                        .HasColumnType("int")
                        .HasColumnName("killer_max_cp");

                    b.Property<int>("KillerMaxHp")
                        .HasColumnType("int")
                        .HasColumnName("killer_max_hp");

                    b.Property<int>("Pvp")
                        .HasColumnType("int")
                        .HasColumnName("pvp");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skill_id");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int")
                        .HasColumnName("skill_level");

                    b.Property<int>("VictimClassId")
                        .HasColumnType("int")
                        .HasColumnName("victim_class_id");

                    b.Property<int>("VictimId")
                        .HasColumnType("int")
                        .HasColumnName("victim_id");

                    b.Property<int>("VictimLevel")
                        .HasColumnType("int")
                        .HasColumnName("victim_level");

                    b.Property<int>("X")
                        .HasColumnType("int")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("int")
                        .HasColumnName("y");

                    b.Property<int>("Z")
                        .HasColumnType("int")
                        .HasColumnName("z");

                    b.ToTable("KillDeathStat");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.L2networkVote", b =>
                {
                    b.Property<string>("Identity")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("identity")
                        .HasDefaultValueSql("(N'')");

                    b.Property<int>("LastRewardTime")
                        .HasColumnType("int")
                        .HasColumnName("last_reward_time");

                    b.Property<int>("LastVoteTime")
                        .HasColumnType("int")
                        .HasColumnName("last_vote_time");

                    b.ToTable("L2NetworkVote");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.LockedHardwareId", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("HardwareId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(33)
                        .HasColumnType("nvarchar(33)")
                        .HasColumnName("hardware_id")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("LockedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("locked_by")
                        .HasDefaultValueSql("(N'')");

                    b.ToTable("LockedHardwareId");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.LoginAnnounce", b =>
                {
                    b.Property<int>("AnnounceId")
                        .HasColumnType("int")
                        .HasColumnName("announce_id");

                    b.Property<string>("AnnounceMsg")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("announce_msg")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("Interval10")
                        .HasColumnType("int")
                        .HasColumnName("interval_10");

                    b.ToTable("login_announce");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.LottoGame", b =>
                {
                    b.Property<int>("RoundNumber")
                        .HasColumnType("int")
                        .HasColumnName("round_number");

                    b.Property<int>("CarriedAdena")
                        .HasColumnType("int")
                        .HasColumnName("carried_adena");

                    b.Property<int>("ChosenNumberFlag")
                        .HasColumnType("int")
                        .HasColumnName("chosen_number_flag");

                    b.Property<int>("LeftTime")
                        .HasColumnType("int")
                        .HasColumnName("left_time");

                    b.Property<int>("RuleNumber")
                        .HasColumnType("int")
                        .HasColumnName("rule_number");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int")
                        .HasColumnName("total_count");

                    b.Property<int>("Winner1Count")
                        .HasColumnType("int")
                        .HasColumnName("winner1_count");

                    b.Property<int>("Winner2Count")
                        .HasColumnType("int")
                        .HasColumnName("winner2_count");

                    b.Property<int>("Winner3Count")
                        .HasColumnType("int")
                        .HasColumnName("winner3_count");

                    b.Property<int>("Winner4Count")
                        .HasColumnType("int")
                        .HasColumnName("winner4_count");

                    b.HasKey("RoundNumber");

                    b.ToTable("lotto_game");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.LottoGameBackup20050302", b =>
                {
                    b.Property<int>("CarriedAdena")
                        .HasColumnType("int")
                        .HasColumnName("carried_adena");

                    b.Property<int>("ChosenNumberFlag")
                        .HasColumnType("int")
                        .HasColumnName("chosen_number_flag");

                    b.Property<int>("LeftTime")
                        .HasColumnType("int")
                        .HasColumnName("left_time");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int")
                        .HasColumnName("round_number");

                    b.Property<int>("RuleNumber")
                        .HasColumnType("int")
                        .HasColumnName("rule_number");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int")
                        .HasColumnName("total_count");

                    b.Property<int>("Winner1Count")
                        .HasColumnType("int")
                        .HasColumnName("winner1_count");

                    b.Property<int>("Winner2Count")
                        .HasColumnType("int")
                        .HasColumnName("winner2_count");

                    b.Property<int>("Winner3Count")
                        .HasColumnType("int")
                        .HasColumnName("winner3_count");

                    b.Property<int>("Winner4Count")
                        .HasColumnType("int")
                        .HasColumnName("winner4_count");

                    b.ToTable("lotto_game_backup_20050302");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.LottoItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("NumberFlag")
                        .HasColumnType("int")
                        .HasColumnName("number_flag");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int")
                        .HasColumnName("round_number");

                    b.HasIndex(new[] { "RoundNumber" }, "IX_lotto_items")
                        .IsClustered()
                        .HasFillFactor(90);

                    b.ToTable("lotto_items");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ManorDataN", b =>
                {
                    b.Property<int>("ManorId")
                        .HasColumnType("int")
                        .HasColumnName("manor_id");

                    b.Property<int>("DataIndex")
                        .HasColumnType("int")
                        .HasColumnName("data_index");

                    b.Property<int>("CropBuyCountN")
                        .HasColumnType("int")
                        .HasColumnName("crop_buy_count_n");

                    b.Property<int>("CropIdN")
                        .HasColumnType("int")
                        .HasColumnName("crop_id_n");

                    b.Property<int>("CropPriceN")
                        .HasColumnType("int")
                        .HasColumnName("crop_price_n");

                    b.Property<int>("CropTypeN")
                        .HasColumnType("int")
                        .HasColumnName("crop_type_n");

                    b.Property<int>("SeedIdN")
                        .HasColumnType("int")
                        .HasColumnName("seed_id_n");

                    b.Property<int>("SeedPriceN")
                        .HasColumnType("int")
                        .HasColumnName("seed_price_n");

                    b.Property<int>("SeedSellCountN")
                        .HasColumnType("int")
                        .HasColumnName("seed_sell_count_n");

                    b.HasKey("ManorId", "DataIndex");

                    b.ToTable("manor_data_n");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ManorDatum", b =>
                {
                    b.Property<int>("ManorId")
                        .HasColumnType("int")
                        .HasColumnName("manor_id");

                    b.Property<int>("DataIndex")
                        .HasColumnType("int")
                        .HasColumnName("data_index");

                    b.Property<int>("CropBuyCount")
                        .HasColumnType("int")
                        .HasColumnName("crop_buy_count");

                    b.Property<int>("CropDeposit")
                        .HasColumnType("int")
                        .HasColumnName("crop_deposit");

                    b.Property<int>("CropId")
                        .HasColumnType("int")
                        .HasColumnName("crop_id");

                    b.Property<int>("CropPrice")
                        .HasColumnType("int")
                        .HasColumnName("crop_price");

                    b.Property<int>("CropRemainCount")
                        .HasColumnType("int")
                        .HasColumnName("crop_remain_count");

                    b.Property<int>("CropType")
                        .HasColumnType("int")
                        .HasColumnName("crop_type");

                    b.Property<int>("SeedId")
                        .HasColumnType("int")
                        .HasColumnName("seed_id");

                    b.Property<int>("SeedPrice")
                        .HasColumnType("int")
                        .HasColumnName("seed_price");

                    b.Property<int>("SeedRemainCount")
                        .HasColumnType("int")
                        .HasColumnName("seed_remain_count");

                    b.Property<int>("SeedSellCount")
                        .HasColumnType("int")
                        .HasColumnName("seed_sell_count");

                    b.HasKey("ManorId", "DataIndex");

                    b.ToTable("manor_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ManorFix", b =>
                {
                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("ErrorAmount")
                        .HasColumnType("int")
                        .HasColumnName("error_amount");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int?>("ToDec")
                        .HasColumnType("int")
                        .HasColumnName("to_dec");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.ToTable("manor_fix");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ManorInfo", b =>
                {
                    b.Property<int>("ManorId")
                        .HasColumnType("int")
                        .HasColumnName("manor_id");

                    b.Property<int>("AdenaVault")
                        .HasColumnType("int")
                        .HasColumnName("adena_vault");

                    b.Property<byte>("ChangeState")
                        .HasColumnType("tinyint")
                        .HasColumnName("change_state");

                    b.Property<int>("CropBuyVault")
                        .HasColumnType("int")
                        .HasColumnName("crop_buy_vault");

                    b.Property<int>("LastChangedT")
                        .HasColumnType("int")
                        .HasColumnName("last_changed_t");

                    b.Property<int>("ResidenceId")
                        .HasColumnType("int")
                        .HasColumnName("residence_id");

                    b.HasKey("ManorId");

                    b.ToTable("manor_info");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Map", b =>
                {
                    b.Property<int?>("Map2")
                        .HasColumnType("int")
                        .HasColumnName("map2");

                    b.Property<int?>("X2")
                        .HasColumnType("int")
                        .HasColumnName("x2");

                    b.Property<int?>("Y2")
                        .HasColumnType("int")
                        .HasColumnName("y2");

                    b.ToTable("map");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Mercenary", b =>
                {
                    b.Property<int>("Angle")
                        .HasColumnType("int")
                        .HasColumnName("angle");

                    b.Property<int>("Hp")
                        .HasColumnType("int")
                        .HasColumnName("hp");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("Mp")
                        .HasColumnType("int")
                        .HasColumnName("mp");

                    b.Property<int>("NpcId")
                        .HasColumnType("int")
                        .HasColumnName("npc_id");

                    b.Property<int>("ResidenceId")
                        .HasColumnType("int")
                        .HasColumnName("residence_id");

                    b.Property<int>("X")
                        .HasColumnType("int")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("int")
                        .HasColumnName("y");

                    b.Property<int>("Z")
                        .HasColumnType("int")
                        .HasColumnName("z");

                    b.ToTable("mercenary");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Monrace", b =>
                {
                    b.Property<short?>("Lane1")
                        .HasColumnType("smallint")
                        .HasColumnName("lane1");

                    b.Property<short?>("Lane2")
                        .HasColumnType("smallint")
                        .HasColumnName("lane2");

                    b.Property<short?>("Lane3")
                        .HasColumnType("smallint")
                        .HasColumnName("lane3");

                    b.Property<short?>("Lane4")
                        .HasColumnType("smallint")
                        .HasColumnName("lane4");

                    b.Property<short?>("Lane5")
                        .HasColumnType("smallint")
                        .HasColumnName("lane5");

                    b.Property<short?>("Lane6")
                        .HasColumnType("smallint")
                        .HasColumnName("lane6");

                    b.Property<short?>("Lane7")
                        .HasColumnType("smallint")
                        .HasColumnName("lane7");

                    b.Property<short?>("Lane8")
                        .HasColumnType("smallint")
                        .HasColumnName("lane8");

                    b.Property<DateTime?>("MakeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("make_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<short?>("RaceEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("race_end")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("race_id")
                        .UseIdentityColumn();

                    b.Property<double?>("Run1")
                        .HasColumnType("float")
                        .HasColumnName("run1");

                    b.Property<double?>("Run2")
                        .HasColumnType("float")
                        .HasColumnName("run2");

                    b.Property<double?>("Run3")
                        .HasColumnType("float")
                        .HasColumnName("run3");

                    b.Property<double?>("Run4")
                        .HasColumnType("float")
                        .HasColumnName("run4");

                    b.Property<double?>("Run5")
                        .HasColumnType("float")
                        .HasColumnName("run5");

                    b.Property<double?>("Run6")
                        .HasColumnType("float")
                        .HasColumnName("run6");

                    b.Property<double?>("Run7")
                        .HasColumnType("float")
                        .HasColumnName("run7");

                    b.Property<double?>("Run8")
                        .HasColumnType("float")
                        .HasColumnName("run8");

                    b.Property<int?>("TaxRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tax_rate")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("Win1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("win1")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("Win2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("win2")
                        .HasDefaultValueSql("((0))");

                    b.Property<double?>("Winrate1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("winrate1")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<double?>("Winrate2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("winrate2")
                        .HasDefaultValueSql("((0.0))");

                    b.HasIndex(new[] { "RaceId" }, "IX_monrace")
                        .IsClustered()
                        .HasFillFactor(90);

                    b.ToTable("monrace");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.MonraceMon", b =>
                {
                    b.Property<short?>("InitialWin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("initial_win")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("RunCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("run_count")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("RunnerId")
                        .HasColumnType("int")
                        .HasColumnName("runner_id");

                    b.Property<int?>("WinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("win_count")
                        .HasDefaultValueSql("((0))");

                    b.ToTable("monrace_mon");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.MonraceTicket", b =>
                {
                    b.Property<short?>("Bet1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("bet_1")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("Bet2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("bet_2")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("Bet3")
                        .HasColumnType("smallint")
                        .HasColumnName("bet_3");

                    b.Property<int?>("BetMoney")
                        .HasColumnType("int")
                        .HasColumnName("bet_money");

                    b.Property<short?>("BetType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("bet_type")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("Monraceid")
                        .HasColumnType("int")
                        .HasColumnName("monraceid");

                    b.Property<int?>("Remotefee")
                        .HasColumnType("int")
                        .HasColumnName("remotefee");

                    b.Property<int?>("TaxMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tax_money")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ticket_id")
                        .UseIdentityColumn();

                    b.HasIndex(new[] { "ItemId" }, "IX_monrace_ticket")
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "Monraceid", "BetType", "Bet1", "Bet2" }, "IX_monrace_ticket_1")
                        .IsClustered()
                        .HasFillFactor(90);

                    b.ToTable("monrace_ticket");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.MultiSellLog", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("CharName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name");

                    b.Property<int>("Price1Count")
                        .HasColumnType("int")
                        .HasColumnName("price1_count");

                    b.Property<int>("Price1Id")
                        .HasColumnType("int")
                        .HasColumnName("price1_id");

                    b.Property<int>("Price2Count")
                        .HasColumnType("int")
                        .HasColumnName("price2_count");

                    b.Property<int>("Price2Id")
                        .HasColumnType("int")
                        .HasColumnName("price2_id");

                    b.Property<int>("Price3Count")
                        .HasColumnType("int")
                        .HasColumnName("price3_count");

                    b.Property<int>("Price3Id")
                        .HasColumnType("int")
                        .HasColumnName("price3_id");

                    b.Property<int>("Price4Count")
                        .HasColumnType("int")
                        .HasColumnName("price4_count");

                    b.Property<int>("Price4Id")
                        .HasColumnType("int")
                        .HasColumnName("price4_id");

                    b.Property<int>("Price5Count")
                        .HasColumnType("int")
                        .HasColumnName("price5_count");

                    b.Property<int>("Price5Id")
                        .HasColumnType("int")
                        .HasColumnName("price5_id");

                    b.Property<int>("Reward1Count")
                        .HasColumnType("int")
                        .HasColumnName("reward1_count");

                    b.Property<int>("Reward1Id")
                        .HasColumnType("int")
                        .HasColumnName("reward1_id");

                    b.Property<int>("Reward2Count")
                        .HasColumnType("int")
                        .HasColumnName("reward2_count");

                    b.Property<int>("Reward2Id")
                        .HasColumnType("int")
                        .HasColumnName("reward2_id");

                    b.Property<int>("Reward3Count")
                        .HasColumnType("int")
                        .HasColumnName("reward3_count");

                    b.Property<int>("Reward3Id")
                        .HasColumnType("int")
                        .HasColumnName("reward3_id");

                    b.Property<int>("Reward4Count")
                        .HasColumnType("int")
                        .HasColumnName("reward4_count");

                    b.Property<int>("Reward4Id")
                        .HasColumnType("int")
                        .HasColumnName("reward4_id");

                    b.Property<int>("Reward5Count")
                        .HasColumnType("int")
                        .HasColumnName("reward5_count");

                    b.Property<int>("Reward5Id")
                        .HasColumnType("int")
                        .HasColumnName("reward5_id");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int")
                        .HasColumnName("timestamp");

                    b.ToTable("MultiSell_Log");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.NoblessAchievement", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("Target")
                        .HasColumnType("int")
                        .HasColumnName("target");

                    b.Property<int?>("WinTime")
                        .HasColumnType("int")
                        .HasColumnName("win_time");

                    b.Property<int?>("WinType")
                        .HasColumnType("int")
                        .HasColumnName("win_type");

                    b.ToTable("nobless_achievements");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.NpcBoss", b =>
                {
                    b.Property<int>("Alive")
                        .HasColumnType("int")
                        .HasColumnName("alive");

                    b.Property<int?>("Hp")
                        .HasColumnType("int")
                        .HasColumnName("hp");

                    b.Property<int>("I0")
                        .HasColumnType("int")
                        .HasColumnName("i0");

                    b.Property<int?>("Mp")
                        .HasColumnType("int")
                        .HasColumnName("mp");

                    b.Property<string>("NpcDbName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("npc_db_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("PosX")
                        .HasColumnType("int")
                        .HasColumnName("pos_x");

                    b.Property<int?>("PosY")
                        .HasColumnType("int")
                        .HasColumnName("pos_y");

                    b.Property<int?>("PosZ")
                        .HasColumnType("int")
                        .HasColumnName("pos_z");

                    b.Property<int?>("TimeHigh")
                        .HasColumnType("int")
                        .HasColumnName("time_high");

                    b.Property<int?>("TimeLow")
                        .HasColumnType("int")
                        .HasColumnName("time_low");

                    b.HasIndex(new[] { "NpcDbName" }, "idx_npc_boss_unique_name")
                        .IsUnique()
                        .HasFillFactor(90);

                    b.ToTable("npc_boss");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.NpcDeath", b =>
                {
                    b.Property<int>("DeathTime")
                        .HasColumnType("int")
                        .HasColumnName("death_time");

                    b.Property<int>("NpcClassId")
                        .HasColumnType("int")
                        .HasColumnName("npc_class_id");

                    b.ToTable("NpcDeath");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Npcname", b =>
                {
                    b.Property<int?>("NpcId")
                        .HasColumnType("int")
                        .HasColumnName("npc_id");

                    b.Property<string>("NpcName1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("npc_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.ToTable("npcname");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ObjectDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("Hp")
                        .HasColumnType("int")
                        .HasColumnName("hp");

                    b.Property<int>("MaxHp")
                        .HasColumnType("int")
                        .HasColumnName("max_hp");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("owner_id");

                    b.Property<int>("ResidenceId")
                        .HasColumnType("int")
                        .HasColumnName("residence_id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int>("XPos")
                        .HasColumnType("int")
                        .HasColumnName("x_pos");

                    b.Property<int>("YPos")
                        .HasColumnType("int")
                        .HasColumnName("y_pos");

                    b.Property<int>("ZPos")
                        .HasColumnType("int")
                        .HasColumnName("z_pos");

                    b.HasKey("Id");

                    b.ToTable("object_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.OhecSubjob", b =>
                {
                    b.Property<int?>("All75")
                        .HasColumnType("int")
                        .HasColumnName("All_75");

                    b.Property<int?>("Server")
                        .HasColumnType("int")
                        .HasColumnName("server");

                    b.Property<int?>("Sub0")
                        .HasColumnType("int");

                    b.Property<int?>("Sub1")
                        .HasColumnType("int");

                    b.Property<int?>("Sub2")
                        .HasColumnType("int");

                    b.Property<int?>("Sub3")
                        .HasColumnType("int");

                    b.ToTable("OHEC_SUBJOB");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.OhecSubjobTemp", b =>
                {
                    b.Property<int?>("All75")
                        .HasColumnType("int")
                        .HasColumnName("All_75");

                    b.Property<int?>("Server")
                        .HasColumnType("int")
                        .HasColumnName("server");

                    b.Property<int?>("Sub0")
                        .HasColumnType("int");

                    b.Property<int?>("Sub1")
                        .HasColumnType("int");

                    b.Property<int?>("Sub2")
                        .HasColumnType("int");

                    b.Property<int?>("Sub3")
                        .HasColumnType("int");

                    b.ToTable("OHEC_SUBJOB_TEMP");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Olympiad", b =>
                {
                    b.Property<int?>("Bonus1Sec")
                        .HasColumnType("int")
                        .HasColumnName("bonus1_sec");

                    b.Property<int?>("Bonus2Sec")
                        .HasColumnType("int")
                        .HasColumnName("bonus2_sec");

                    b.Property<int?>("Bonus3Sec")
                        .HasColumnType("int")
                        .HasColumnName("bonus3_sec");

                    b.Property<int?>("Bonus4Sec")
                        .HasColumnType("int")
                        .HasColumnName("bonus4_sec");

                    b.Property<int?>("NominateSec")
                        .HasColumnType("int")
                        .HasColumnName("nominate_sec");

                    b.Property<int>("Season")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("season")
                        .UseIdentityColumn();

                    b.Property<int?>("SeasonStartTime")
                        .HasColumnType("int")
                        .HasColumnName("season_start_time");

                    b.Property<int?>("StartSec")
                        .HasColumnType("int")
                        .HasColumnName("start_sec");

                    b.Property<int?>("Step")
                        .HasColumnType("int")
                        .HasColumnName("step");

                    b.ToTable("olympiad");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.OlympiadMatch", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("Class")
                        .HasColumnType("int")
                        .HasColumnName("class");

                    b.Property<byte?>("IsWinner")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_winner");

                    b.Property<int?>("MatchTime")
                        .HasColumnType("int")
                        .HasColumnName("match_time");

                    b.Property<int?>("Point")
                        .HasColumnType("int")
                        .HasColumnName("point");

                    b.Property<int?>("RivalId")
                        .HasColumnType("int")
                        .HasColumnName("rival_id");

                    b.Property<int?>("Season")
                        .HasColumnType("int")
                        .HasColumnName("season");

                    b.ToTable("olympiad_match");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.OlympiadResult", b =>
                {
                    b.Property<int>("Season")
                        .HasColumnType("int")
                        .HasColumnName("season");

                    b.Property<int>("Class")
                        .HasColumnType("int")
                        .HasColumnName("class");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("MatchCount")
                        .HasColumnType("int")
                        .HasColumnName("match_count");

                    b.Property<int>("Point")
                        .HasColumnType("int")
                        .HasColumnName("point");

                    b.HasKey("Season", "Class", "CharId");

                    b.ToTable("olympiad_result");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.PetDatum", b =>
                {
                    b.Property<int>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("pet_id");

                    b.Property<int>("Expoint")
                        .HasColumnType("int")
                        .HasColumnName("expoint");

                    b.Property<double>("Hp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("hp")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Meal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("meal")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("Mp")
                        .HasColumnType("float")
                        .HasColumnName("mp");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nick_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("NpcClassId")
                        .HasColumnType("int")
                        .HasColumnName("npc_class_id");

                    b.Property<int>("Slot1")
                        .HasColumnType("int")
                        .HasColumnName("slot1");

                    b.Property<int>("Slot2")
                        .HasColumnType("int")
                        .HasColumnName("slot2");

                    b.Property<int>("Sp")
                        .HasColumnType("int")
                        .HasColumnName("sp");

                    b.HasKey("PetId");

                    b.ToTable("pet_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.PetitionMsg", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("Char_Id");

                    b.Property<string>("Msg")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("msg")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasIndex(new[] { "CharId" }, "idx_petmsg_charid")
                        .HasFillFactor(90);

                    b.ToTable("PetitionMsg");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Pledge", b =>
                {
                    b.Property<int>("PledgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pledge_id")
                        .UseIdentityColumn();

                    b.Property<int>("AgitId")
                        .HasColumnType("int")
                        .HasColumnName("agit_id");

                    b.Property<int>("AllianceDismissTime")
                        .HasColumnType("int")
                        .HasColumnName("alliance_dismiss_time");

                    b.Property<int>("AllianceId")
                        .HasColumnType("int")
                        .HasColumnName("alliance_id");

                    b.Property<int>("AllianceOustedTime")
                        .HasColumnType("int")
                        .HasColumnName("alliance_ousted_time");

                    b.Property<int>("AllianceWithdrawTime")
                        .HasColumnType("int")
                        .HasColumnName("alliance_withdraw_time");

                    b.Property<int>("CastleId")
                        .HasColumnType("int")
                        .HasColumnName("castle_id");

                    b.Property<int>("ChallengeTime")
                        .HasColumnType("int")
                        .HasColumnName("challenge_time");

                    b.Property<int>("CrestId")
                        .HasColumnType("int")
                        .HasColumnName("crest_id");

                    b.Property<int?>("DelegateClid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("delegate_clid")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("DismissReservedTime")
                        .HasColumnType("int")
                        .HasColumnName("dismiss_reserved_time");

                    b.Property<int>("EmblemId")
                        .HasColumnType("int")
                        .HasColumnName("emblem_id");

                    b.Property<int>("IsGuilty")
                        .HasColumnType("int")
                        .HasColumnName("is_guilty");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("NameValue")
                        .HasColumnType("int")
                        .HasColumnName("name_value");

                    b.Property<int>("NowWarId")
                        .HasColumnType("int")
                        .HasColumnName("now_war_id");

                    b.Property<int>("OustTime")
                        .HasColumnType("int")
                        .HasColumnName("oust_time");

                    b.Property<int>("PrivateFlag")
                        .HasColumnType("int")
                        .HasColumnName("private_flag");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("rank");

                    b.Property<int>("RootNameValue")
                        .HasColumnType("int")
                        .HasColumnName("root_name_value");

                    b.Property<int>("RulerId")
                        .HasColumnType("int")
                        .HasColumnName("ruler_id");

                    b.Property<int>("SiegeDeath")
                        .HasColumnType("int")
                        .HasColumnName("siege_death");

                    b.Property<int>("SiegeKill")
                        .HasColumnType("int")
                        .HasColumnName("siege_kill");

                    b.Property<short>("SkillLevel")
                        .HasColumnType("smallint")
                        .HasColumnName("skill_level");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("PledgeId");

                    b.HasIndex(new[] { "Name" }, "IX_Pledge")
                        .IsUnique();

                    b.ToTable("Pledge");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.PledgeAnnounce", b =>
                {
                    b.Property<string>("Content")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)")
                        .HasColumnName("content")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<short>("ShowFlag")
                        .HasColumnType("smallint")
                        .HasColumnName("show_flag");

                    b.ToTable("pledge_announce");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.PledgeContribution", b =>
                {
                    b.Property<int>("ResidenceId")
                        .HasColumnType("int")
                        .HasColumnName("residence_id");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int>("Contribution")
                        .HasColumnType("int")
                        .HasColumnName("contribution");

                    b.HasKey("ResidenceId", "PledgeId");

                    b.ToTable("pledge_contribution");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.PledgeCrest", b =>
                {
                    b.Property<int>("CrestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("crest_id")
                        .UseIdentityColumn();

                    b.Property<byte[]>("Bitmap")
                        .HasMaxLength(3072)
                        .HasColumnType("varbinary(3072)")
                        .HasColumnName("bitmap");

                    b.Property<short>("BitmapSize")
                        .HasColumnType("smallint")
                        .HasColumnName("bitmap_size");

                    b.HasKey("CrestId");

                    b.ToTable("Pledge_Crest");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.PledgeExt", b =>
                {
                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<long>("Rank1")
                        .HasColumnType("bigint");

                    b.Property<long>("Rank2")
                        .HasColumnType("bigint");

                    b.Property<long>("Rank3")
                        .HasColumnType("bigint");

                    b.Property<long>("Rank4")
                        .HasColumnType("bigint");

                    b.Property<long>("Rank5")
                        .HasColumnType("bigint");

                    b.Property<long>("Rank6")
                        .HasColumnType("bigint");

                    b.Property<long>("Rank7")
                        .HasColumnType("bigint");

                    b.Property<long>("Rank8")
                        .HasColumnType("bigint");

                    b.Property<long>("Rank9")
                        .HasColumnType("bigint");

                    b.Property<int>("ReputationPoints")
                        .HasColumnType("int")
                        .HasColumnName("reputation_points");

                    b.Property<byte>("Skill0")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill10")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill11")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill12")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill13")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill14")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill15")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill16")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill17")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill18")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill19")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill20")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill21")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill6")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill7")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill8")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Skill9")
                        .HasColumnType("tinyint");

                    b.HasKey("PledgeId");

                    b.ToTable("pledge_ext");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.PledgeSkill", b =>
                {
                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skill_id");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int")
                        .HasColumnName("skill_level");

                    b.ToTable("pledge_skill");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.PledgeSubpledge", b =>
                {
                    b.Property<int>("LeaderDbid")
                        .HasColumnType("int")
                        .HasColumnName("leader_dbid");

                    b.Property<string>("LeaderName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("leader_name")
                        .HasDefaultValueSql("(N'')");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int>("PledgeType")
                        .HasColumnType("int")
                        .HasColumnName("pledge_type");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sub_name")
                        .HasDefaultValueSql("(N'')");

                    b.ToTable("pledge_subpledge");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Point", b =>
                {
                    b.Property<int?>("Align")
                        .HasColumnType("int")
                        .HasColumnName("align");

                    b.Property<int?>("Loc")
                        .HasColumnType("int")
                        .HasColumnName("loc");

                    b.Property<int?>("Map")
                        .HasColumnType("int")
                        .HasColumnName("map");

                    b.Property<int?>("X")
                        .HasColumnType("int")
                        .HasColumnName("x");

                    b.Property<int?>("Y")
                        .HasColumnType("int")
                        .HasColumnName("y");

                    b.Property<int?>("Z")
                        .HasColumnType("int")
                        .HasColumnName("z");

                    b.ToTable("point");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.PrivateStore", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("IsOffline")
                        .HasColumnType("int")
                        .HasColumnName("is_offline");

                    b.Property<int?>("Item1Count")
                        .HasColumnType("int")
                        .HasColumnName("item1_count");

                    b.Property<int?>("Item1Enchant")
                        .HasColumnType("int")
                        .HasColumnName("item1_enchant");

                    b.Property<int?>("Item1Id")
                        .HasColumnType("int")
                        .HasColumnName("item1_id");

                    b.Property<int?>("Item1Price")
                        .HasColumnType("int")
                        .HasColumnName("item1_price");

                    b.Property<int?>("Item2Count")
                        .HasColumnType("int")
                        .HasColumnName("item2_count");

                    b.Property<int?>("Item2Enchant")
                        .HasColumnType("int")
                        .HasColumnName("item2_enchant");

                    b.Property<int?>("Item2Id")
                        .HasColumnType("int")
                        .HasColumnName("item2_id");

                    b.Property<int?>("Item2Price")
                        .HasColumnType("int")
                        .HasColumnName("item2_price");

                    b.Property<int?>("Item3Count")
                        .HasColumnType("int")
                        .HasColumnName("item3_count");

                    b.Property<int?>("Item3Enchant")
                        .HasColumnType("int")
                        .HasColumnName("item3_enchant");

                    b.Property<int?>("Item3Id")
                        .HasColumnType("int")
                        .HasColumnName("item3_id");

                    b.Property<int?>("Item3Price")
                        .HasColumnType("int")
                        .HasColumnName("item3_price");

                    b.Property<int?>("Item4Count")
                        .HasColumnType("int")
                        .HasColumnName("item4_count");

                    b.Property<int?>("Item4Enchant")
                        .HasColumnType("int")
                        .HasColumnName("item4_enchant");

                    b.Property<int?>("Item4Id")
                        .HasColumnType("int")
                        .HasColumnName("item4_id");

                    b.Property<int?>("Item4Price")
                        .HasColumnType("int")
                        .HasColumnName("item4_price");

                    b.Property<int?>("Item5Count")
                        .HasColumnType("int")
                        .HasColumnName("item5_count");

                    b.Property<int?>("Item5Enchant")
                        .HasColumnType("int")
                        .HasColumnName("item5_enchant");

                    b.Property<int?>("Item5Id")
                        .HasColumnType("int")
                        .HasColumnName("item5_id");

                    b.Property<int?>("Item5Price")
                        .HasColumnType("int")
                        .HasColumnName("item5_price");

                    b.Property<int?>("Item6Count")
                        .HasColumnType("int")
                        .HasColumnName("item6_count");

                    b.Property<int?>("Item6Enchant")
                        .HasColumnType("int")
                        .HasColumnName("item6_enchant");

                    b.Property<int?>("Item6Id")
                        .HasColumnType("int")
                        .HasColumnName("item6_id");

                    b.Property<int?>("Item6Price")
                        .HasColumnType("int")
                        .HasColumnName("item6_price");

                    b.Property<int?>("Item7Count")
                        .HasColumnType("int")
                        .HasColumnName("item7_count");

                    b.Property<int?>("Item7Enchant")
                        .HasColumnType("int")
                        .HasColumnName("item7_enchant");

                    b.Property<int?>("Item7Id")
                        .HasColumnType("int")
                        .HasColumnName("item7_id");

                    b.Property<int?>("Item7Price")
                        .HasColumnType("int")
                        .HasColumnName("item7_price");

                    b.Property<int?>("Item8Count")
                        .HasColumnType("int")
                        .HasColumnName("item8_count");

                    b.Property<int?>("Item8Enchant")
                        .HasColumnType("int")
                        .HasColumnName("item8_enchant");

                    b.Property<int?>("Item8Id")
                        .HasColumnType("int")
                        .HasColumnName("item8_id");

                    b.Property<int?>("Item8Price")
                        .HasColumnType("int")
                        .HasColumnName("item8_price");

                    b.Property<int?>("StoreType")
                        .HasColumnType("int")
                        .HasColumnName("store_type");

                    b.Property<int?>("XLoc")
                        .HasColumnType("int")
                        .HasColumnName("x_loc");

                    b.Property<int?>("YLoc")
                        .HasColumnType("int")
                        .HasColumnName("y_loc");

                    b.Property<int?>("ZLoc")
                        .HasColumnType("int")
                        .HasColumnName("z_loc");

                    b.ToTable("PrivateStore");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Quest", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("J1")
                        .HasColumnType("int")
                        .HasColumnName("j1");

                    b.Property<int>("J10")
                        .HasColumnType("int")
                        .HasColumnName("j10");

                    b.Property<int>("J11")
                        .HasColumnType("int")
                        .HasColumnName("j11");

                    b.Property<int>("J12")
                        .HasColumnType("int")
                        .HasColumnName("j12");

                    b.Property<int>("J13")
                        .HasColumnType("int")
                        .HasColumnName("j13");

                    b.Property<int>("J14")
                        .HasColumnType("int")
                        .HasColumnName("j14");

                    b.Property<int>("J15")
                        .HasColumnType("int")
                        .HasColumnName("j15");

                    b.Property<int>("J16")
                        .HasColumnType("int")
                        .HasColumnName("j16");

                    b.Property<int>("J17")
                        .HasColumnType("int")
                        .HasColumnName("j17");

                    b.Property<int>("J18")
                        .HasColumnType("int")
                        .HasColumnName("j18");

                    b.Property<int>("J19")
                        .HasColumnType("int")
                        .HasColumnName("j19");

                    b.Property<int>("J2")
                        .HasColumnType("int")
                        .HasColumnName("j2");

                    b.Property<int>("J20")
                        .HasColumnType("int")
                        .HasColumnName("j20");

                    b.Property<int>("J21")
                        .HasColumnType("int")
                        .HasColumnName("j21");

                    b.Property<int>("J22")
                        .HasColumnType("int")
                        .HasColumnName("j22");

                    b.Property<int>("J23")
                        .HasColumnType("int")
                        .HasColumnName("j23");

                    b.Property<int>("J24")
                        .HasColumnType("int")
                        .HasColumnName("j24");

                    b.Property<int>("J25")
                        .HasColumnType("int")
                        .HasColumnName("j25");

                    b.Property<int>("J26")
                        .HasColumnType("int")
                        .HasColumnName("j26");

                    b.Property<int>("J3")
                        .HasColumnType("int")
                        .HasColumnName("j3");

                    b.Property<int>("J4")
                        .HasColumnType("int")
                        .HasColumnName("j4");

                    b.Property<int>("J5")
                        .HasColumnType("int")
                        .HasColumnName("j5");

                    b.Property<int>("J6")
                        .HasColumnType("int")
                        .HasColumnName("j6");

                    b.Property<int>("J7")
                        .HasColumnType("int")
                        .HasColumnName("j7");

                    b.Property<int>("J8")
                        .HasColumnType("int")
                        .HasColumnName("j8");

                    b.Property<int>("J9")
                        .HasColumnType("int")
                        .HasColumnName("j9");

                    b.Property<int>("Q1")
                        .HasColumnType("int")
                        .HasColumnName("q1");

                    b.Property<int>("Q10")
                        .HasColumnType("int")
                        .HasColumnName("q10");

                    b.Property<int>("Q11")
                        .HasColumnType("int")
                        .HasColumnName("q11");

                    b.Property<int>("Q12")
                        .HasColumnType("int")
                        .HasColumnName("q12");

                    b.Property<int>("Q13")
                        .HasColumnType("int")
                        .HasColumnName("q13");

                    b.Property<int>("Q14")
                        .HasColumnType("int")
                        .HasColumnName("q14");

                    b.Property<int>("Q15")
                        .HasColumnType("int")
                        .HasColumnName("q15");

                    b.Property<int>("Q16")
                        .HasColumnType("int")
                        .HasColumnName("q16");

                    b.Property<int>("Q17")
                        .HasColumnType("int")
                        .HasColumnName("q17");

                    b.Property<int>("Q18")
                        .HasColumnType("int")
                        .HasColumnName("q18");

                    b.Property<int>("Q19")
                        .HasColumnType("int")
                        .HasColumnName("q19");

                    b.Property<int>("Q2")
                        .HasColumnType("int")
                        .HasColumnName("q2");

                    b.Property<int>("Q20")
                        .HasColumnType("int")
                        .HasColumnName("q20");

                    b.Property<int>("Q21")
                        .HasColumnType("int")
                        .HasColumnName("q21");

                    b.Property<int>("Q22")
                        .HasColumnType("int")
                        .HasColumnName("q22");

                    b.Property<int>("Q23")
                        .HasColumnType("int")
                        .HasColumnName("q23");

                    b.Property<int>("Q24")
                        .HasColumnType("int")
                        .HasColumnName("q24");

                    b.Property<int>("Q25")
                        .HasColumnType("int")
                        .HasColumnName("q25");

                    b.Property<int>("Q26")
                        .HasColumnType("int")
                        .HasColumnName("q26");

                    b.Property<int>("Q3")
                        .HasColumnType("int")
                        .HasColumnName("q3");

                    b.Property<int>("Q4")
                        .HasColumnType("int")
                        .HasColumnName("q4");

                    b.Property<int>("Q5")
                        .HasColumnType("int")
                        .HasColumnName("q5");

                    b.Property<int>("Q6")
                        .HasColumnType("int")
                        .HasColumnName("q6");

                    b.Property<int>("Q7")
                        .HasColumnType("int")
                        .HasColumnName("q7");

                    b.Property<int>("Q8")
                        .HasColumnType("int")
                        .HasColumnName("q8");

                    b.Property<int>("Q9")
                        .HasColumnType("int")
                        .HasColumnName("q9");

                    b.Property<int?>("S1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s1")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("S10")
                        .HasColumnType("int")
                        .HasColumnName("s10");

                    b.Property<int>("S11")
                        .HasColumnType("int")
                        .HasColumnName("s11");

                    b.Property<int>("S12")
                        .HasColumnType("int")
                        .HasColumnName("s12");

                    b.Property<int>("S13")
                        .HasColumnType("int")
                        .HasColumnName("s13");

                    b.Property<int>("S14")
                        .HasColumnType("int")
                        .HasColumnName("s14");

                    b.Property<int>("S15")
                        .HasColumnType("int")
                        .HasColumnName("s15");

                    b.Property<int>("S16")
                        .HasColumnType("int")
                        .HasColumnName("s16");

                    b.Property<int>("S17")
                        .HasColumnType("int")
                        .HasColumnName("s17");

                    b.Property<int>("S18")
                        .HasColumnType("int")
                        .HasColumnName("s18");

                    b.Property<int>("S19")
                        .HasColumnType("int")
                        .HasColumnName("s19");

                    b.Property<int>("S2")
                        .HasColumnType("int")
                        .HasColumnName("s2");

                    b.Property<int>("S20")
                        .HasColumnType("int")
                        .HasColumnName("s20");

                    b.Property<int?>("S21")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_1")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("S210")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_10")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("S211")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_11")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("S212")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_12")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("S213")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_13")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("S214")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_14")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("S215")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_15")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("S216")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_16")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("S217")
                        .HasColumnType("int")
                        .HasColumnName("s21");

                    b.Property<int>("S2171")
                        .HasColumnType("int")
                        .HasColumnName("s2_17");

                    b.Property<int>("S218")
                        .HasColumnType("int")
                        .HasColumnName("s2_18");

                    b.Property<int>("S219")
                        .HasColumnType("int")
                        .HasColumnName("s2_19");

                    b.Property<int?>("S22")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_2")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("S220")
                        .HasColumnType("int")
                        .HasColumnName("s2_20");

                    b.Property<int>("S221")
                        .HasColumnType("int")
                        .HasColumnName("s22");

                    b.Property<int>("S2211")
                        .HasColumnType("int")
                        .HasColumnName("s2_21");

                    b.Property<int>("S222")
                        .HasColumnType("int")
                        .HasColumnName("s2_22");

                    b.Property<int>("S223")
                        .HasColumnType("int")
                        .HasColumnName("s2_23");

                    b.Property<int>("S224")
                        .HasColumnType("int")
                        .HasColumnName("s2_24");

                    b.Property<int>("S225")
                        .HasColumnType("int")
                        .HasColumnName("s2_25");

                    b.Property<int>("S226")
                        .HasColumnType("int")
                        .HasColumnName("s2_26");

                    b.Property<int?>("S23")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_3")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("S231")
                        .HasColumnType("int")
                        .HasColumnName("s23");

                    b.Property<int?>("S24")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_4")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("S241")
                        .HasColumnType("int")
                        .HasColumnName("s24");

                    b.Property<int?>("S25")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_5")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("S251")
                        .HasColumnType("int")
                        .HasColumnName("s25");

                    b.Property<int?>("S26")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_6")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("S261")
                        .HasColumnType("int")
                        .HasColumnName("s26");

                    b.Property<int?>("S27")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_7")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("S28")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_8")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("S29")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s2_9")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("S3")
                        .HasColumnType("int")
                        .HasColumnName("s3");

                    b.Property<int>("S4")
                        .HasColumnType("int")
                        .HasColumnName("s4");

                    b.Property<int>("S5")
                        .HasColumnType("int")
                        .HasColumnName("s5");

                    b.Property<int>("S6")
                        .HasColumnType("int")
                        .HasColumnName("s6");

                    b.Property<int>("S7")
                        .HasColumnType("int")
                        .HasColumnName("s7");

                    b.Property<int>("S8")
                        .HasColumnType("int")
                        .HasColumnName("s8");

                    b.Property<int>("S9")
                        .HasColumnType("int")
                        .HasColumnName("s9");

                    b.HasIndex(new[] { "CharId" }, "IX_Quest")
                        .IsUnique()
                        .HasFillFactor(90);

                    b.ToTable("quest");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.QuestDatum", b =>
                {
                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("data")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Logdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("logdate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.ToTable("QuestData");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ReqChar", b =>
                {
                    b.Property<string>("CharName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("ServerId")
                        .HasColumnType("int")
                        .HasColumnName("server_id");

                    b.ToTable("req_char");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ReqCharmove", b =>
                {
                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("IsPcBang")
                        .HasColumnType("int")
                        .HasColumnName("is_pc_bang");

                    b.Property<int?>("NewCharId")
                        .HasColumnType("int")
                        .HasColumnName("new_char_id");

                    b.Property<string>("NewCharName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("new_char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("NewWorldId")
                        .HasColumnType("int")
                        .HasColumnName("new_world_id");

                    b.Property<int?>("OldCharId")
                        .HasColumnType("int")
                        .HasColumnName("old_char_id");

                    b.Property<string>("OldCharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("old_char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("OldWorldId")
                        .HasColumnType("int")
                        .HasColumnName("old_world_id");

                    b.Property<DateTime?>("ReqDate")
                        .HasColumnType("datetime")
                        .HasColumnName("req_date");

                    b.Property<int>("ReqId")
                        .HasColumnType("int")
                        .HasColumnName("req_id");

                    b.ToTable("req_charmove");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ReqCharmoveOld", b =>
                {
                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("NewCharId")
                        .HasColumnType("int")
                        .HasColumnName("new_char_id");

                    b.Property<string>("NewCharName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("new_char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("NewWorldId")
                        .HasColumnType("int")
                        .HasColumnName("new_world_id");

                    b.Property<int?>("OldCharId")
                        .HasColumnType("int")
                        .HasColumnName("old_char_id");

                    b.Property<string>("OldCharName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("old_char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("OldWorldId")
                        .HasColumnType("int")
                        .HasColumnName("old_world_id");

                    b.Property<DateTime?>("ReqDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("req_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("req_id")
                        .UseIdentityColumn();

                    b.HasIndex(new[] { "NewCharName" }, "IX_req_charmove")
                        .IsUnique()
                        .HasFilter("[new_char_name] IS NOT NULL");

                    b.HasIndex(new[] { "OldCharId", "OldWorldId" }, "IX_req_charmove_1")
                        .IsUnique()
                        .HasFilter("[old_char_id] IS NOT NULL AND [old_world_id] IS NOT NULL");

                    b.HasIndex(new[] { "AccountId" }, "IX_req_charmove_2")
                        .IsUnique()
                        .HasFilter("[account_id] IS NOT NULL");

                    b.HasIndex(new[] { "NewCharName", "NewWorldId" }, "IX_req_charmove_3")
                        .IsUnique()
                        .HasFilter("[new_char_name] IS NOT NULL AND [new_world_id] IS NOT NULL");

                    b.ToTable("req_charmove_old");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ReqPledge", b =>
                {
                    b.Property<int?>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int?>("ServerId")
                        .HasColumnType("int")
                        .HasColumnName("server_id");

                    b.ToTable("req_pledge");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ResidenceGuard", b =>
                {
                    b.Property<int>("X")
                        .HasColumnType("int")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("int")
                        .HasColumnName("y");

                    b.Property<int>("Z")
                        .HasColumnType("int")
                        .HasColumnName("z");

                    b.Property<int>("Angle")
                        .HasColumnType("int")
                        .HasColumnName("angle");

                    b.Property<int>("CanMove")
                        .HasColumnType("int")
                        .HasColumnName("can_move");

                    b.Property<int>("GuardType")
                        .HasColumnType("int")
                        .HasColumnName("guard_type");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("NpcId")
                        .HasColumnType("int")
                        .HasColumnName("npc_id");

                    b.Property<int>("ResidenceId")
                        .HasColumnType("int")
                        .HasColumnName("residence_id");

                    b.HasKey("X", "Y", "Z")
                        .HasName("pk_residence_guard");

                    b.ToTable("residence_guard");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.ShortcutDatum", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Slotnum")
                        .HasColumnType("int")
                        .HasColumnName("slotnum");

                    b.Property<int>("SubjobId")
                        .HasColumnType("int")
                        .HasColumnName("subjob_id");

                    b.Property<int>("ShortcutId")
                        .HasColumnType("int")
                        .HasColumnName("shortcut_id");

                    b.Property<string>("ShortcutMacro")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("shortcut_macro")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("ShortcutType")
                        .HasColumnType("int")
                        .HasColumnName("shortcut_type");

                    b.HasKey("CharId", "Slotnum", "SubjobId");

                    b.ToTable("shortcut_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.SiegeAgitPledge", b =>
                {
                    b.Property<int>("AgitId")
                        .HasColumnType("int")
                        .HasColumnName("agit_id");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int>("ProposeTime")
                        .HasColumnType("int")
                        .HasColumnName("propose_time");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.HasIndex(new[] { "AgitId", "PledgeId" }, "sap_uniq")
                        .IsUnique();

                    b.ToTable("siege_agit_pledge");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.SiegeStat", b =>
                {
                    b.Property<int>("CastleId")
                        .HasColumnType("int")
                        .HasColumnName("castle_id");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("DamageDealt")
                        .HasColumnType("int")
                        .HasColumnName("damage_dealt");

                    b.Property<int?>("DamageTaken")
                        .HasColumnType("int")
                        .HasColumnName("damage_taken");

                    b.Property<int?>("DeathCount")
                        .HasColumnType("int")
                        .HasColumnName("death_count");

                    b.Property<int?>("KillCount")
                        .HasColumnType("int")
                        .HasColumnName("kill_count");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.ToTable("SiegeStat");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.SkillDatum", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<short>("Lev")
                        .HasColumnType("smallint")
                        .HasColumnName("lev");

                    b.Property<string>("ActivateType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("activate_type")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte?>("BIsMagic")
                        .HasColumnType("tinyint")
                        .HasColumnName("bIsMagic");

                    b.Property<DateTime>("Logdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("logdate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("SkillDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("skill_desc")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasKey("Id", "Lev");

                    b.HasIndex(new[] { "Name" }, "IX_name");

                    b.ToTable("SkillData");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.SsqDatum", b =>
                {
                    b.Property<int?>("CanDropGuard")
                        .HasColumnType("int")
                        .HasColumnName("can_drop_guard");

                    b.Property<int?>("CastleSnapshotTime")
                        .HasColumnType("int")
                        .HasColumnName("castle_snapshot_time");

                    b.Property<int>("EventEndTime")
                        .HasColumnType("int")
                        .HasColumnName("event_end_time");

                    b.Property<int>("EventStartTime")
                        .HasColumnType("int")
                        .HasColumnName("event_start_time");

                    b.Property<DateTime>("LastChangedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_changed_time");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int")
                        .HasColumnName("round_number");

                    b.Property<byte>("Seal1")
                        .HasColumnType("tinyint")
                        .HasColumnName("seal1");

                    b.Property<byte>("Seal2")
                        .HasColumnType("tinyint")
                        .HasColumnName("seal2");

                    b.Property<byte>("Seal3")
                        .HasColumnType("tinyint")
                        .HasColumnName("seal3");

                    b.Property<byte>("Seal4")
                        .HasColumnType("tinyint")
                        .HasColumnName("seal4");

                    b.Property<byte>("Seal5")
                        .HasColumnType("tinyint")
                        .HasColumnName("seal5");

                    b.Property<byte>("Seal6")
                        .HasColumnType("tinyint")
                        .HasColumnName("seal6");

                    b.Property<byte>("Seal7")
                        .HasColumnType("tinyint")
                        .HasColumnName("seal7");

                    b.Property<int>("SealEffectEndTime")
                        .HasColumnType("int")
                        .HasColumnName("seal_effect_end_time");

                    b.Property<int>("SealEffectTime")
                        .HasColumnType("int")
                        .HasColumnName("seal_effect_time");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<byte>("Winner")
                        .HasColumnType("tinyint")
                        .HasColumnName("winner");

                    b.ToTable("ssq_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.SsqJoinDatum", b =>
                {
                    b.Property<int?>("CollectedPoint")
                        .HasColumnType("int")
                        .HasColumnName("collected_point");

                    b.Property<DateTime>("LastChangedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_changed_time");

                    b.Property<int?>("MainEventPoint")
                        .HasColumnType("int")
                        .HasColumnName("main_event_point");

                    b.Property<int>("MemberCount")
                        .HasColumnType("int")
                        .HasColumnName("member_count");

                    b.Property<int>("Point")
                        .HasColumnType("int")
                        .HasColumnName("point");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int")
                        .HasColumnName("round_number");

                    b.Property<int>("Seal1SelectionCount")
                        .HasColumnType("int")
                        .HasColumnName("seal1_selection_count");

                    b.Property<int>("Seal2SelectionCount")
                        .HasColumnType("int")
                        .HasColumnName("seal2_selection_count");

                    b.Property<int>("Seal3SelectionCount")
                        .HasColumnType("int")
                        .HasColumnName("seal3_selection_count");

                    b.Property<int>("Seal4SelectionCount")
                        .HasColumnType("int")
                        .HasColumnName("seal4_selection_count");

                    b.Property<int>("Seal5SelectionCount")
                        .HasColumnType("int")
                        .HasColumnName("seal5_selection_count");

                    b.Property<int>("Seal6SelectionCount")
                        .HasColumnType("int")
                        .HasColumnName("seal6_selection_count");

                    b.Property<int>("Seal7SelectionCount")
                        .HasColumnType("int")
                        .HasColumnName("seal7_selection_count");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnName("type");

                    b.ToTable("ssq_join_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.SsqTopPointUser", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<DateTime?>("LastChangedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_changed_time");

                    b.Property<int>("RankTime")
                        .HasColumnType("int")
                        .HasColumnName("rank_time");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<byte>("SealSelectionNo")
                        .HasColumnType("tinyint")
                        .HasColumnName("seal_selection_no");

                    b.Property<byte>("SsqPart")
                        .HasColumnType("tinyint")
                        .HasColumnName("ssq_part");

                    b.Property<int>("SsqPoint")
                        .HasColumnType("int")
                        .HasColumnName("ssq_point");

                    b.Property<byte>("SsqPosition")
                        .HasColumnType("tinyint")
                        .HasColumnName("ssq_position");

                    b.Property<int>("SsqRound")
                        .HasColumnType("int")
                        .HasColumnName("ssq_round");

                    b.ToTable("ssq_top_point_user");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.SsqUserDatum", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("DawnAItemNum")
                        .HasColumnType("int")
                        .HasColumnName("dawn_a_item_num");

                    b.Property<int>("DawnBItemNum")
                        .HasColumnType("int")
                        .HasColumnName("dawn_b_item_num");

                    b.Property<int>("DawnCItemNum")
                        .HasColumnType("int")
                        .HasColumnName("dawn_c_item_num");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int")
                        .HasColumnName("round_number");

                    b.Property<byte>("SealSelectionNo")
                        .HasColumnType("tinyint")
                        .HasColumnName("seal_selection_no");

                    b.Property<int>("SsqJoinTime")
                        .HasColumnType("int")
                        .HasColumnName("ssq_join_time");

                    b.Property<byte>("SsqPart")
                        .HasColumnType("tinyint")
                        .HasColumnName("ssq_part");

                    b.Property<int>("SsqPoint")
                        .HasColumnType("int")
                        .HasColumnName("ssq_point");

                    b.Property<byte>("SsqPosition")
                        .HasColumnType("tinyint")
                        .HasColumnName("ssq_position");

                    b.Property<byte>("TicketBuyCount")
                        .HasColumnType("tinyint")
                        .HasColumnName("ticket_buy_count");

                    b.Property<int>("TwilightAItemNum")
                        .HasColumnType("int")
                        .HasColumnName("twilight_a_item_num");

                    b.Property<int>("TwilightBItemNum")
                        .HasColumnType("int")
                        .HasColumnName("twilight_b_item_num");

                    b.Property<int>("TwilightCItemNum")
                        .HasColumnType("int")
                        .HasColumnName("twilight_c_item_num");

                    b.ToTable("ssq_user_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.StatAccClass", b =>
                {
                    b.Property<byte>("Class")
                        .HasColumnType("tinyint")
                        .HasColumnName("class");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.ToTable("stat_acc_class");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.StatAccLev", b =>
                {
                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<byte>("Lev")
                        .HasColumnType("tinyint")
                        .HasColumnName("lev");

                    b.ToTable("stat_acc_lev");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.StatAccMlev", b =>
                {
                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint")
                        .HasColumnName("class");

                    b.Property<byte>("Lev")
                        .HasColumnType("tinyint")
                        .HasColumnName("lev");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint")
                        .HasColumnName("race");

                    b.ToTable("stat_acc_mlev");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.StatAccRace", b =>
                {
                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint")
                        .HasColumnName("race");

                    b.ToTable("stat_acc_race");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.StatItemCnt", b =>
                {
                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<double>("Sum")
                        .HasColumnType("float")
                        .HasColumnName("sum");

                    b.ToTable("stat_item_cnt");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.StatItemEnt", b =>
                {
                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int>("Sum")
                        .HasColumnType("int")
                        .HasColumnName("sum");

                    b.ToTable("stat_item_ent");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.StatItemMent", b =>
                {
                    b.Property<byte>("Builder")
                        .HasColumnType("tinyint")
                        .HasColumnName("builder");

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int>("MaxEnt")
                        .HasColumnType("int")
                        .HasColumnName("max_ent");

                    b.ToTable("stat_item_ment");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.StatItemMincnt", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.ToTable("stat_item_mincnt");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.SubStack", b =>
                {
                    b.Property<int>("BaseClass0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("baseClass0")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("BaseClass1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("baseClass1")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("BaseClass2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("baseClass2")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("BaseClass3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("baseClass3")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("StackClass0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stackClass0")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("StackClass1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stackClass1")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("StackClass2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stackClass2")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("StackClass3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stackClass3")
                        .HasDefaultValueSql("((-1))");

                    b.ToTable("SubStack");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TeamBattleAgitMember", b =>
                {
                    b.Property<int>("AgitId")
                        .HasColumnType("int")
                        .HasColumnName("agit_id");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int>("ProposeTime")
                        .HasColumnType("int")
                        .HasColumnName("propose_time");

                    b.HasIndex(new[] { "AgitId", "CharId" }, "tbam_uniq")
                        .IsUnique();

                    b.ToTable("team_battle_agit_member");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TeamBattleAgitPledge", b =>
                {
                    b.Property<int>("AgitId")
                        .HasColumnType("int")
                        .HasColumnName("agit_id");

                    b.Property<int>("Color")
                        .HasColumnType("int")
                        .HasColumnName("color");

                    b.Property<int>("NpcType")
                        .HasColumnType("int")
                        .HasColumnName("npc_type");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<int>("ProposeTime")
                        .HasColumnType("int")
                        .HasColumnName("propose_time");

                    b.HasIndex(new[] { "AgitId", "PledgeId" }, "tbap_uniq")
                        .IsUnique();

                    b.ToTable("team_battle_agit_pledge");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TempAccount", b =>
                {
                    b.Property<string>("RealAccount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("real_account")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_id")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.ToTable("temp_account");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TempInv", b =>
                {
                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.ToTable("temp_inv");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TempPetInv", b =>
                {
                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("PetCollarId")
                        .HasColumnType("int")
                        .HasColumnName("pet_collar_id");

                    b.Property<int>("PetItemId")
                        .HasColumnType("int")
                        .HasColumnName("pet_item_id");

                    b.Property<int>("PetItemType")
                        .HasColumnType("int")
                        .HasColumnName("pet_item_type");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.ToTable("temp_pet_inv");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TempRecipe", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int?>("Recipecount")
                        .HasColumnType("int")
                        .HasColumnName("recipecount");

                    b.Property<int?>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.ToTable("temp_recipe");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TempSkill", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("Lev")
                        .HasColumnType("int")
                        .HasColumnName("lev");

                    b.Property<int?>("Skill")
                        .HasColumnType("int")
                        .HasColumnName("skill");

                    b.Property<int?>("Temptime")
                        .HasColumnType("int")
                        .HasColumnName("temptime");

                    b.ToTable("temp_skill");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TempSkill2", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skill_id");

                    b.Property<int?>("SkillLev")
                        .HasColumnType("int")
                        .HasColumnName("skill_lev");

                    b.Property<int?>("Temptime")
                        .HasColumnType("int")
                        .HasColumnName("temptime");

                    b.ToTable("temp_skill2");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TempUpdate", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.ToTable("temp_update");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.Test", b =>
                {
                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("Class")
                        .HasColumnType("int")
                        .HasColumnName("class");

                    b.Property<byte?>("Lev")
                        .HasColumnType("tinyint")
                        .HasColumnName("lev");

                    b.Property<int>("_")
                        .HasColumnType("int")
                        .HasColumnName("??");

                    b.ToTable("TEST");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TimeAttackRecord", b =>
                {
                    b.Property<int>("ElapsedTime")
                        .HasColumnType("int")
                        .HasColumnName("elapsed_time");

                    b.Property<int?>("Fee")
                        .HasColumnType("int")
                        .HasColumnName("fee");

                    b.Property<int>("MemberCount")
                        .HasColumnType("int")
                        .HasColumnName("member_count");

                    b.Property<string>("MemberDbidList")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("member_dbid_list")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("MemberNames")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("member_names")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("MemberRewardFlags")
                        .HasColumnType("int")
                        .HasColumnName("member_reward_flags");

                    b.Property<int>("Point")
                        .HasColumnType("int")
                        .HasColumnName("point");

                    b.Property<int>("RecordTime")
                        .HasColumnType("int")
                        .HasColumnName("record_time");

                    b.Property<byte>("RecordType")
                        .HasColumnType("tinyint")
                        .HasColumnName("record_type");

                    b.Property<byte>("RoomNo")
                        .HasColumnType("tinyint")
                        .HasColumnName("room_no");

                    b.Property<byte>("SsqPart")
                        .HasColumnType("tinyint")
                        .HasColumnName("ssq_part");

                    b.Property<int>("SsqRound")
                        .HasColumnType("int")
                        .HasColumnName("ssq_round");

                    b.ToTable("time_attack_record");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TimeAttackRecordTest", b =>
                {
                    b.Property<string>("Col001")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col002")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col003")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col004")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col005")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col006")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col007")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col008")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col009")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col010")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col011")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Col012")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.ToTable("time_attack_record_test");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TimeDatum", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("LastLogout")
                        .HasColumnType("datetime")
                        .HasColumnName("last_logout");

                    b.Property<int>("UsedSec")
                        .HasColumnType("int")
                        .HasColumnName("used_sec");

                    b.HasKey("AccountId")
                        .HasName("PK_char_data2");

                    b.ToTable("time_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TmpAlliance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("MasterPledgeId")
                        .HasColumnType("int")
                        .HasColumnName("master_pledge_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("OustTime")
                        .HasColumnType("int")
                        .HasColumnName("oust_time");

                    b.ToTable("tmp_alliance");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TmpDieUser", b =>
                {
                    b.Property<string>("AccountName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("AfterResurrectExp")
                        .HasColumnType("int")
                        .HasColumnName("after_resurrect_exp");

                    b.Property<int?>("BeforeDieExp")
                        .HasColumnType("int")
                        .HasColumnName("before_die_exp");

                    b.Property<string>("CharName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("DieMinusExp")
                        .HasColumnType("int")
                        .HasColumnName("die_minus_exp");

                    b.Property<int?>("HasSubjob")
                        .HasColumnType("int")
                        .HasColumnName("hasSubjob");

                    b.Property<int?>("ResurrectAddExp")
                        .HasColumnType("int")
                        .HasColumnName("resurrect_add_exp");

                    b.ToTable("tmp_die_user");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TmpLottoPriceGiven", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("CharName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("NewPrice")
                        .HasColumnType("int")
                        .HasColumnName("new_price");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<int?>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("rank");

                    b.ToTable("tmp_lotto_price_given");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TmpPledge", b =>
                {
                    b.Property<int>("AgitId")
                        .HasColumnType("int")
                        .HasColumnName("agit_id");

                    b.Property<int>("AllianceId")
                        .HasColumnType("int")
                        .HasColumnName("alliance_id");

                    b.Property<int>("CastleId")
                        .HasColumnType("int")
                        .HasColumnName("castle_id");

                    b.Property<int>("DismissReservedTime")
                        .HasColumnType("int")
                        .HasColumnName("dismiss_reserved_time");

                    b.Property<int>("IsGuilty")
                        .HasColumnType("int")
                        .HasColumnName("is_guilty");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasColumnName("name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("NameValue")
                        .HasColumnType("int")
                        .HasColumnName("name_value");

                    b.Property<int>("OustTime")
                        .HasColumnType("int")
                        .HasColumnName("oust_time");

                    b.Property<int>("PledgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pledge_id")
                        .UseIdentityColumn();

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("rank");

                    b.Property<int>("RootNameValue")
                        .HasColumnType("int")
                        .HasColumnName("root_name_value");

                    b.Property<int>("RulerId")
                        .HasColumnType("int")
                        .HasColumnName("ruler_id");

                    b.Property<short>("SkillLevel")
                        .HasColumnType("smallint")
                        .HasColumnName("skill_level");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.ToTable("tmp_pledge");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TmpRecoverUser", b =>
                {
                    b.Property<int?>("AddedExp")
                        .HasColumnType("int")
                        .HasColumnName("addedExp");

                    b.Property<string>("CharName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.ToTable("tmp_recover_user");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TmpSeedDp", b =>
                {
                    b.Property<int?>("Dp")
                        .HasColumnType("int")
                        .HasColumnName("dp");

                    b.Property<int?>("SeedId")
                        .HasColumnType("int")
                        .HasColumnName("seed_id");

                    b.ToTable("tmp_seed_dp");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TmpUserDatum", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("Align")
                        .HasColumnType("int")
                        .HasColumnName("align");

                    b.Property<byte>("Builder")
                        .HasColumnType("tinyint")
                        .HasColumnName("builder");

                    b.Property<int>("CharId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("char_id")
                        .UseIdentityColumn();

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint")
                        .HasColumnName("class");

                    b.Property<double>("Cp")
                        .HasColumnType("float")
                        .HasColumnName("cp");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<int>("DropExp")
                        .HasColumnType("int")
                        .HasColumnName("drop_exp");

                    b.Property<int>("Duel")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int")
                        .HasColumnName("EXP");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint")
                        .HasColumnName("gender");

                    b.Property<byte>("Lev")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Login")
                        .HasColumnType("datetime")
                        .HasColumnName("login");

                    b.Property<DateTime?>("Logout")
                        .HasColumnType("datetime")
                        .HasColumnName("logout");

                    b.Property<double>("MaxCp")
                        .HasColumnType("float")
                        .HasColumnName("max_cp");

                    b.Property<int>("MaxHp")
                        .HasColumnType("int")
                        .HasColumnName("max_hp");

                    b.Property<int>("MaxMp")
                        .HasColumnType("int")
                        .HasColumnName("max_mp");

                    b.Property<string>("Nickname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nickname")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("Pk")
                        .HasColumnType("int")
                        .HasColumnName("PK");

                    b.Property<int>("Pkpardon")
                        .HasColumnType("int")
                        .HasColumnName("PKpardon");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint")
                        .HasColumnName("race");

                    b.Property<int>("Sp")
                        .HasColumnType("int")
                        .HasColumnName("SP");

                    b.Property<int>("Subjob0Class")
                        .HasColumnType("int")
                        .HasColumnName("subjob0_class");

                    b.Property<int>("Subjob1Class")
                        .HasColumnType("int")
                        .HasColumnName("subjob1_class");

                    b.Property<int>("Subjob2Class")
                        .HasColumnType("int")
                        .HasColumnName("subjob2_class");

                    b.Property<int>("Subjob3Class")
                        .HasColumnType("int")
                        .HasColumnName("subjob3_class");

                    b.Property<int?>("SubjobId")
                        .HasColumnType("int")
                        .HasColumnName("subjob_id");

                    b.Property<int>("UseTime")
                        .HasColumnType("int")
                        .HasColumnName("use_time");

                    b.Property<short>("World")
                        .HasColumnType("smallint")
                        .HasColumnName("world");

                    b.ToTable("tmp_user_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TmpUserItem", b =>
                {
                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("item_id")
                        .UseIdentityColumn();

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.ToTable("tmp_user_item");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.TmpUserNobless", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<byte?>("HeroType")
                        .HasColumnType("tinyint")
                        .HasColumnName("hero_type");

                    b.Property<int?>("MatchCount")
                        .HasColumnType("int")
                        .HasColumnName("match_count");

                    b.Property<byte?>("NoblessType")
                        .HasColumnType("tinyint")
                        .HasColumnName("nobless_type");

                    b.Property<int?>("OlympiadPoint")
                        .HasColumnType("int")
                        .HasColumnName("olympiad_point");

                    b.Property<int?>("PreviousPoint")
                        .HasColumnType("int")
                        .HasColumnName("previous_point");

                    b.Property<int?>("WinCount")
                        .HasColumnType("int")
                        .HasColumnName("win_count");

                    b.Property<string>("Words")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("words")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.ToTable("tmp_user_nobless");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserActiveSkill", b =>
                {
                    b.Property<byte?>("C1")
                        .HasColumnType("tinyint")
                        .HasColumnName("c1");

                    b.Property<byte?>("C10")
                        .HasColumnType("tinyint")
                        .HasColumnName("c10");

                    b.Property<byte?>("C11")
                        .HasColumnType("tinyint")
                        .HasColumnName("c11");

                    b.Property<byte?>("C12")
                        .HasColumnType("tinyint")
                        .HasColumnName("c12");

                    b.Property<byte?>("C13")
                        .HasColumnType("tinyint")
                        .HasColumnName("c13");

                    b.Property<byte?>("C14")
                        .HasColumnType("tinyint")
                        .HasColumnName("c14");

                    b.Property<byte?>("C15")
                        .HasColumnType("tinyint")
                        .HasColumnName("c15");

                    b.Property<byte?>("C16")
                        .HasColumnType("tinyint")
                        .HasColumnName("c16");

                    b.Property<byte?>("C17")
                        .HasColumnType("tinyint")
                        .HasColumnName("c17");

                    b.Property<byte?>("C18")
                        .HasColumnType("tinyint")
                        .HasColumnName("c18");

                    b.Property<byte?>("C19")
                        .HasColumnType("tinyint")
                        .HasColumnName("c19");

                    b.Property<byte?>("C2")
                        .HasColumnType("tinyint")
                        .HasColumnName("c2");

                    b.Property<byte?>("C20")
                        .HasColumnType("tinyint")
                        .HasColumnName("c20");

                    b.Property<byte?>("C21")
                        .HasColumnType("tinyint")
                        .HasColumnName("c21");

                    b.Property<byte?>("C22")
                        .HasColumnType("tinyint")
                        .HasColumnName("c22");

                    b.Property<byte?>("C23")
                        .HasColumnType("tinyint")
                        .HasColumnName("c23");

                    b.Property<byte?>("C24")
                        .HasColumnType("tinyint")
                        .HasColumnName("c24");

                    b.Property<byte?>("C25")
                        .HasColumnType("tinyint")
                        .HasColumnName("c25");

                    b.Property<byte?>("C26")
                        .HasColumnType("tinyint")
                        .HasColumnName("c26");

                    b.Property<byte?>("C27")
                        .HasColumnType("tinyint")
                        .HasColumnName("c27");

                    b.Property<byte?>("C28")
                        .HasColumnType("tinyint")
                        .HasColumnName("c28");

                    b.Property<byte?>("C29")
                        .HasColumnType("tinyint")
                        .HasColumnName("c29");

                    b.Property<byte?>("C3")
                        .HasColumnType("tinyint")
                        .HasColumnName("c3");

                    b.Property<byte?>("C30")
                        .HasColumnType("tinyint")
                        .HasColumnName("c30");

                    b.Property<byte?>("C31")
                        .HasColumnType("tinyint")
                        .HasColumnName("c31");

                    b.Property<byte?>("C32")
                        .HasColumnType("tinyint")
                        .HasColumnName("c32");

                    b.Property<byte?>("C33")
                        .HasColumnType("tinyint")
                        .HasColumnName("c33");

                    b.Property<byte?>("C34")
                        .HasColumnType("tinyint")
                        .HasColumnName("c34");

                    b.Property<byte?>("C35")
                        .HasColumnType("tinyint")
                        .HasColumnName("c35");

                    b.Property<byte?>("C36")
                        .HasColumnType("tinyint")
                        .HasColumnName("c36");

                    b.Property<byte?>("C37")
                        .HasColumnType("tinyint")
                        .HasColumnName("c37");

                    b.Property<byte?>("C38")
                        .HasColumnType("tinyint")
                        .HasColumnName("c38");

                    b.Property<byte?>("C39")
                        .HasColumnType("tinyint")
                        .HasColumnName("c39");

                    b.Property<byte?>("C4")
                        .HasColumnType("tinyint")
                        .HasColumnName("c4");

                    b.Property<byte?>("C40")
                        .HasColumnType("tinyint")
                        .HasColumnName("c40");

                    b.Property<byte?>("C5")
                        .HasColumnType("tinyint")
                        .HasColumnName("c5");

                    b.Property<byte?>("C6")
                        .HasColumnType("tinyint")
                        .HasColumnName("c6");

                    b.Property<byte?>("C7")
                        .HasColumnType("tinyint")
                        .HasColumnName("c7");

                    b.Property<byte?>("C8")
                        .HasColumnType("tinyint")
                        .HasColumnName("c8");

                    b.Property<byte?>("C9")
                        .HasColumnType("tinyint")
                        .HasColumnName("c9");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("D1")
                        .HasColumnType("int")
                        .HasColumnName("d1");

                    b.Property<int?>("D10")
                        .HasColumnType("int")
                        .HasColumnName("d10");

                    b.Property<int?>("D11")
                        .HasColumnType("int")
                        .HasColumnName("d11");

                    b.Property<int?>("D12")
                        .HasColumnType("int")
                        .HasColumnName("d12");

                    b.Property<int?>("D13")
                        .HasColumnType("int")
                        .HasColumnName("d13");

                    b.Property<int?>("D14")
                        .HasColumnType("int")
                        .HasColumnName("d14");

                    b.Property<int?>("D15")
                        .HasColumnType("int")
                        .HasColumnName("d15");

                    b.Property<int?>("D16")
                        .HasColumnType("int")
                        .HasColumnName("d16");

                    b.Property<int?>("D17")
                        .HasColumnType("int")
                        .HasColumnName("d17");

                    b.Property<int?>("D18")
                        .HasColumnType("int")
                        .HasColumnName("d18");

                    b.Property<int?>("D19")
                        .HasColumnType("int")
                        .HasColumnName("d19");

                    b.Property<int?>("D2")
                        .HasColumnType("int")
                        .HasColumnName("d2");

                    b.Property<int?>("D20")
                        .HasColumnType("int")
                        .HasColumnName("d20");

                    b.Property<int?>("D21")
                        .HasColumnType("int")
                        .HasColumnName("d21");

                    b.Property<int?>("D22")
                        .HasColumnType("int")
                        .HasColumnName("d22");

                    b.Property<int?>("D23")
                        .HasColumnType("int")
                        .HasColumnName("d23");

                    b.Property<int?>("D24")
                        .HasColumnType("int")
                        .HasColumnName("d24");

                    b.Property<int?>("D25")
                        .HasColumnType("int")
                        .HasColumnName("d25");

                    b.Property<int?>("D26")
                        .HasColumnType("int")
                        .HasColumnName("d26");

                    b.Property<int?>("D27")
                        .HasColumnType("int")
                        .HasColumnName("d27");

                    b.Property<int?>("D28")
                        .HasColumnType("int")
                        .HasColumnName("d28");

                    b.Property<int?>("D29")
                        .HasColumnType("int")
                        .HasColumnName("d29");

                    b.Property<int?>("D3")
                        .HasColumnType("int")
                        .HasColumnName("d3");

                    b.Property<int?>("D30")
                        .HasColumnType("int")
                        .HasColumnName("d30");

                    b.Property<int?>("D31")
                        .HasColumnType("int")
                        .HasColumnName("d31");

                    b.Property<int?>("D32")
                        .HasColumnType("int")
                        .HasColumnName("d32");

                    b.Property<int?>("D33")
                        .HasColumnType("int")
                        .HasColumnName("d33");

                    b.Property<int?>("D34")
                        .HasColumnType("int")
                        .HasColumnName("d34");

                    b.Property<int?>("D35")
                        .HasColumnType("int")
                        .HasColumnName("d35");

                    b.Property<int?>("D36")
                        .HasColumnType("int")
                        .HasColumnName("d36");

                    b.Property<int?>("D37")
                        .HasColumnType("int")
                        .HasColumnName("d37");

                    b.Property<int?>("D38")
                        .HasColumnType("int")
                        .HasColumnName("d38");

                    b.Property<int?>("D39")
                        .HasColumnType("int")
                        .HasColumnName("d39");

                    b.Property<int?>("D4")
                        .HasColumnType("int")
                        .HasColumnName("d4");

                    b.Property<int?>("D40")
                        .HasColumnType("int")
                        .HasColumnName("d40");

                    b.Property<int?>("D5")
                        .HasColumnType("int")
                        .HasColumnName("d5");

                    b.Property<int?>("D6")
                        .HasColumnType("int")
                        .HasColumnName("d6");

                    b.Property<int?>("D7")
                        .HasColumnType("int")
                        .HasColumnName("d7");

                    b.Property<int?>("D8")
                        .HasColumnType("int")
                        .HasColumnName("d8");

                    b.Property<int?>("D9")
                        .HasColumnType("int")
                        .HasColumnName("d9");

                    b.Property<byte?>("L1")
                        .HasColumnType("tinyint")
                        .HasColumnName("l1");

                    b.Property<byte?>("L10")
                        .HasColumnType("tinyint")
                        .HasColumnName("l10");

                    b.Property<byte?>("L11")
                        .HasColumnType("tinyint")
                        .HasColumnName("l11");

                    b.Property<byte?>("L12")
                        .HasColumnType("tinyint")
                        .HasColumnName("l12");

                    b.Property<byte?>("L13")
                        .HasColumnType("tinyint")
                        .HasColumnName("l13");

                    b.Property<byte?>("L14")
                        .HasColumnType("tinyint")
                        .HasColumnName("l14");

                    b.Property<byte?>("L15")
                        .HasColumnType("tinyint")
                        .HasColumnName("l15");

                    b.Property<byte?>("L16")
                        .HasColumnType("tinyint")
                        .HasColumnName("l16");

                    b.Property<byte?>("L17")
                        .HasColumnType("tinyint")
                        .HasColumnName("l17");

                    b.Property<byte?>("L18")
                        .HasColumnType("tinyint")
                        .HasColumnName("l18");

                    b.Property<byte?>("L19")
                        .HasColumnType("tinyint")
                        .HasColumnName("l19");

                    b.Property<byte?>("L2")
                        .HasColumnType("tinyint")
                        .HasColumnName("l2");

                    b.Property<byte?>("L20")
                        .HasColumnType("tinyint")
                        .HasColumnName("l20");

                    b.Property<byte?>("L21")
                        .HasColumnType("tinyint")
                        .HasColumnName("l21");

                    b.Property<byte?>("L22")
                        .HasColumnType("tinyint")
                        .HasColumnName("l22");

                    b.Property<byte?>("L23")
                        .HasColumnType("tinyint")
                        .HasColumnName("l23");

                    b.Property<byte?>("L24")
                        .HasColumnType("tinyint")
                        .HasColumnName("l24");

                    b.Property<byte?>("L25")
                        .HasColumnType("tinyint")
                        .HasColumnName("l25");

                    b.Property<byte?>("L26")
                        .HasColumnType("tinyint")
                        .HasColumnName("l26");

                    b.Property<byte?>("L27")
                        .HasColumnType("tinyint")
                        .HasColumnName("l27");

                    b.Property<byte?>("L28")
                        .HasColumnType("tinyint")
                        .HasColumnName("l28");

                    b.Property<byte?>("L29")
                        .HasColumnType("tinyint")
                        .HasColumnName("l29");

                    b.Property<byte?>("L3")
                        .HasColumnType("tinyint")
                        .HasColumnName("l3");

                    b.Property<byte?>("L30")
                        .HasColumnType("tinyint")
                        .HasColumnName("l30");

                    b.Property<byte?>("L31")
                        .HasColumnType("tinyint")
                        .HasColumnName("l31");

                    b.Property<byte?>("L32")
                        .HasColumnType("tinyint")
                        .HasColumnName("l32");

                    b.Property<byte?>("L33")
                        .HasColumnType("tinyint")
                        .HasColumnName("l33");

                    b.Property<byte?>("L34")
                        .HasColumnType("tinyint")
                        .HasColumnName("l34");

                    b.Property<byte?>("L35")
                        .HasColumnType("tinyint")
                        .HasColumnName("l35");

                    b.Property<byte?>("L36")
                        .HasColumnType("tinyint")
                        .HasColumnName("l36");

                    b.Property<byte?>("L37")
                        .HasColumnType("tinyint")
                        .HasColumnName("l37");

                    b.Property<byte?>("L38")
                        .HasColumnType("tinyint")
                        .HasColumnName("l38");

                    b.Property<byte?>("L39")
                        .HasColumnType("tinyint")
                        .HasColumnName("l39");

                    b.Property<byte?>("L4")
                        .HasColumnType("tinyint")
                        .HasColumnName("l4");

                    b.Property<byte?>("L40")
                        .HasColumnType("tinyint")
                        .HasColumnName("l40");

                    b.Property<byte?>("L5")
                        .HasColumnType("tinyint")
                        .HasColumnName("l5");

                    b.Property<byte?>("L6")
                        .HasColumnType("tinyint")
                        .HasColumnName("l6");

                    b.Property<byte?>("L7")
                        .HasColumnType("tinyint")
                        .HasColumnName("l7");

                    b.Property<byte?>("L8")
                        .HasColumnType("tinyint")
                        .HasColumnName("l8");

                    b.Property<byte?>("L9")
                        .HasColumnType("tinyint")
                        .HasColumnName("l9");

                    b.Property<int?>("S1")
                        .HasColumnType("int")
                        .HasColumnName("s1");

                    b.Property<int?>("S10")
                        .HasColumnType("int")
                        .HasColumnName("s10");

                    b.Property<int?>("S11")
                        .HasColumnType("int")
                        .HasColumnName("s11");

                    b.Property<int?>("S12")
                        .HasColumnType("int")
                        .HasColumnName("s12");

                    b.Property<int?>("S13")
                        .HasColumnType("int")
                        .HasColumnName("s13");

                    b.Property<int?>("S14")
                        .HasColumnType("int")
                        .HasColumnName("s14");

                    b.Property<int?>("S15")
                        .HasColumnType("int")
                        .HasColumnName("s15");

                    b.Property<int?>("S16")
                        .HasColumnType("int")
                        .HasColumnName("s16");

                    b.Property<int?>("S17")
                        .HasColumnType("int")
                        .HasColumnName("s17");

                    b.Property<int?>("S18")
                        .HasColumnType("int")
                        .HasColumnName("s18");

                    b.Property<int?>("S19")
                        .HasColumnType("int")
                        .HasColumnName("s19");

                    b.Property<int?>("S2")
                        .HasColumnType("int")
                        .HasColumnName("s2");

                    b.Property<int?>("S20")
                        .HasColumnType("int")
                        .HasColumnName("s20");

                    b.Property<int?>("S21")
                        .HasColumnType("int")
                        .HasColumnName("s21");

                    b.Property<int?>("S22")
                        .HasColumnType("int")
                        .HasColumnName("s22");

                    b.Property<int?>("S23")
                        .HasColumnType("int")
                        .HasColumnName("s23");

                    b.Property<int?>("S24")
                        .HasColumnType("int")
                        .HasColumnName("s24");

                    b.Property<int?>("S25")
                        .HasColumnType("int")
                        .HasColumnName("s25");

                    b.Property<int?>("S26")
                        .HasColumnType("int")
                        .HasColumnName("s26");

                    b.Property<int?>("S27")
                        .HasColumnType("int")
                        .HasColumnName("s27");

                    b.Property<int?>("S28")
                        .HasColumnType("int")
                        .HasColumnName("s28");

                    b.Property<int?>("S29")
                        .HasColumnType("int")
                        .HasColumnName("s29");

                    b.Property<int?>("S3")
                        .HasColumnType("int")
                        .HasColumnName("s3");

                    b.Property<int?>("S30")
                        .HasColumnType("int")
                        .HasColumnName("s30");

                    b.Property<int?>("S31")
                        .HasColumnType("int")
                        .HasColumnName("s31");

                    b.Property<int?>("S32")
                        .HasColumnType("int")
                        .HasColumnName("s32");

                    b.Property<int?>("S33")
                        .HasColumnType("int")
                        .HasColumnName("s33");

                    b.Property<int?>("S34")
                        .HasColumnType("int")
                        .HasColumnName("s34");

                    b.Property<int?>("S35")
                        .HasColumnType("int")
                        .HasColumnName("s35");

                    b.Property<int?>("S36")
                        .HasColumnType("int")
                        .HasColumnName("s36");

                    b.Property<int?>("S37")
                        .HasColumnType("int")
                        .HasColumnName("s37");

                    b.Property<int?>("S38")
                        .HasColumnType("int")
                        .HasColumnName("s38");

                    b.Property<int?>("S39")
                        .HasColumnType("int")
                        .HasColumnName("s39");

                    b.Property<int?>("S4")
                        .HasColumnType("int")
                        .HasColumnName("s4");

                    b.Property<int?>("S40")
                        .HasColumnType("int")
                        .HasColumnName("s40");

                    b.Property<int?>("S5")
                        .HasColumnType("int")
                        .HasColumnName("s5");

                    b.Property<int?>("S6")
                        .HasColumnType("int")
                        .HasColumnName("s6");

                    b.Property<int?>("S7")
                        .HasColumnType("int")
                        .HasColumnName("s7");

                    b.Property<int?>("S8")
                        .HasColumnType("int")
                        .HasColumnName("s8");

                    b.Property<int?>("S9")
                        .HasColumnType("int")
                        .HasColumnName("s9");

                    b.ToTable("user_ActiveSkill");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserBan", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<DateTime?>("BanDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ban_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("BanEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ban_end")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("BanHour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ban_hour")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("CharId");

                    b.ToTable("user_ban");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserBlocklist", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("BlockCharId")
                        .HasColumnType("int")
                        .HasColumnName("block_char_id");

                    b.Property<string>("BlockCharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("block_char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasKey("CharId", "BlockCharId");

                    b.ToTable("user_blocklist");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserComment", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("CharName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("comment")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<DateTime?>("CommentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("comment_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("comment_id")
                        .UseIdentityColumn();

                    b.Property<byte?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Writer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("writer")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasIndex(new[] { "CharId", "Deleted", "CommentId" }, "IX_user_comment")
                        .IsClustered()
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "CommentId" }, "IX_user_comment_1")
                        .HasFillFactor(90);

                    b.ToTable("user_comment");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserDataMoved", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("Align")
                        .HasColumnType("int")
                        .HasColumnName("align");

                    b.Property<byte>("Builder")
                        .HasColumnType("tinyint")
                        .HasColumnName("builder");

                    b.Property<int>("CharId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("char_id")
                        .UseIdentityColumn();

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint")
                        .HasColumnName("class");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<int>("DropExp")
                        .HasColumnType("int")
                        .HasColumnName("drop_exp");

                    b.Property<int>("Duel")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("FaceIndex")
                        .HasColumnType("int")
                        .HasColumnName("face_index");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint")
                        .HasColumnName("gender");

                    b.Property<int>("HairColorIndex")
                        .HasColumnType("int")
                        .HasColumnName("hair_color_index");

                    b.Property<int>("HairShapeIndex")
                        .HasColumnType("int")
                        .HasColumnName("hair_shape_index");

                    b.Property<double>("Hp")
                        .HasColumnType("float")
                        .HasColumnName("HP");

                    b.Property<short>("IsInVehicle")
                        .HasColumnType("smallint");

                    b.Property<byte>("Lev")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Login")
                        .HasColumnType("datetime")
                        .HasColumnName("login");

                    b.Property<DateTime?>("Logout")
                        .HasColumnType("datetime")
                        .HasColumnName("logout");

                    b.Property<int>("MaxHp")
                        .HasColumnType("int")
                        .HasColumnName("max_hp");

                    b.Property<int>("MaxMp")
                        .HasColumnType("int")
                        .HasColumnName("max_mp");

                    b.Property<double>("Mp")
                        .HasColumnType("float")
                        .HasColumnName("MP");

                    b.Property<string>("Nickname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nickname")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("Pk")
                        .HasColumnType("int")
                        .HasColumnName("PK");

                    b.Property<int>("Pkpardon")
                        .HasColumnType("int")
                        .HasColumnName("PKpardon");

                    b.Property<int>("PledgeDismissTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_dismiss_time");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<byte>("PledgeLeaveStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("pledge_leave_status");

                    b.Property<int>("PledgeLeaveTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_leave_time");

                    b.Property<int>("PledgeOustedTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_ousted_time");

                    b.Property<int>("PledgeWithdrawTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_withdraw_time");

                    b.Property<byte[]>("PowerFlag")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("binary(32)")
                        .HasColumnName("power_flag")
                        .IsFixedLength(true);

                    b.Property<byte[]>("QuestFlag")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("binary(32)")
                        .HasColumnName("quest_flag")
                        .IsFixedLength(true);

                    b.Property<string>("QuestMemo")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("char(32)")
                        .HasColumnName("quest_memo")
                        .IsFixedLength(true)
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint")
                        .HasColumnName("race");

                    b.Property<int>("Sp")
                        .HasColumnType("int")
                        .HasColumnName("SP");

                    b.Property<int>("StBack")
                        .HasColumnType("int")
                        .HasColumnName("ST_back");

                    b.Property<int>("StBothHand")
                        .HasColumnType("int")
                        .HasColumnName("ST_both_hand");

                    b.Property<int>("StChest")
                        .HasColumnType("int")
                        .HasColumnName("ST_chest");

                    b.Property<int>("StFeet")
                        .HasColumnType("int")
                        .HasColumnName("ST_feet");

                    b.Property<int>("StGloves")
                        .HasColumnType("int")
                        .HasColumnName("ST_gloves");

                    b.Property<int>("StHead")
                        .HasColumnType("int")
                        .HasColumnName("ST_head");

                    b.Property<int>("StLeftEar")
                        .HasColumnType("int")
                        .HasColumnName("ST_left_ear");

                    b.Property<int>("StLeftFinger")
                        .HasColumnType("int")
                        .HasColumnName("ST_left_finger");

                    b.Property<int>("StLeftHand")
                        .HasColumnType("int")
                        .HasColumnName("ST_left_hand");

                    b.Property<int>("StLegs")
                        .HasColumnType("int")
                        .HasColumnName("ST_legs");

                    b.Property<int>("StNeck")
                        .HasColumnType("int")
                        .HasColumnName("ST_neck");

                    b.Property<int>("StRightEar")
                        .HasColumnType("int")
                        .HasColumnName("ST_right_ear");

                    b.Property<int>("StRightFinger")
                        .HasColumnType("int")
                        .HasColumnName("ST_right_finger");

                    b.Property<int>("StRightHand")
                        .HasColumnType("int")
                        .HasColumnName("ST_right_hand");

                    b.Property<int>("StUnderware")
                        .HasColumnType("int")
                        .HasColumnName("ST_underware");

                    b.Property<int>("SurrenderWarId")
                        .HasColumnType("int")
                        .HasColumnName("surrender_war_id");

                    b.Property<DateTime?>("TempDeleteDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("temp_delete_date");

                    b.Property<int>("UseTime")
                        .HasColumnType("int")
                        .HasColumnName("use_time");

                    b.Property<short>("World")
                        .HasColumnType("smallint")
                        .HasColumnName("world");

                    b.Property<int>("Xloc")
                        .HasColumnType("int")
                        .HasColumnName("xloc");

                    b.Property<int>("Yloc")
                        .HasColumnType("int")
                        .HasColumnName("yloc");

                    b.Property<int>("Zloc")
                        .HasColumnType("int")
                        .HasColumnName("zloc");

                    b.ToTable("user_data_moved");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserDataTemp", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("Align")
                        .HasColumnType("int")
                        .HasColumnName("align");

                    b.Property<byte>("Builder")
                        .HasColumnType("tinyint")
                        .HasColumnName("builder");

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint")
                        .HasColumnName("class");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<int>("DropExp")
                        .HasColumnType("int")
                        .HasColumnName("drop_exp");

                    b.Property<int>("Duel")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("FaceIndex")
                        .HasColumnType("int")
                        .HasColumnName("face_index");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint")
                        .HasColumnName("gender");

                    b.Property<int>("HairColorIndex")
                        .HasColumnType("int")
                        .HasColumnName("hair_color_index");

                    b.Property<int>("HairShapeIndex")
                        .HasColumnType("int")
                        .HasColumnName("hair_shape_index");

                    b.Property<double>("Hp")
                        .HasColumnType("float")
                        .HasColumnName("HP");

                    b.Property<short>("IsInVehicle")
                        .HasColumnType("smallint");

                    b.Property<byte>("Lev")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Login")
                        .HasColumnType("datetime")
                        .HasColumnName("login");

                    b.Property<DateTime?>("Logout")
                        .HasColumnType("datetime")
                        .HasColumnName("logout");

                    b.Property<int>("MaxHp")
                        .HasColumnType("int")
                        .HasColumnName("max_hp");

                    b.Property<int>("MaxMp")
                        .HasColumnType("int")
                        .HasColumnName("max_mp");

                    b.Property<double>("Mp")
                        .HasColumnType("float")
                        .HasColumnName("MP");

                    b.Property<string>("Nickname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nickname")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("OldX")
                        .HasColumnType("int")
                        .HasColumnName("old_x");

                    b.Property<int?>("OldY")
                        .HasColumnType("int")
                        .HasColumnName("old_y");

                    b.Property<int?>("OldZ")
                        .HasColumnType("int")
                        .HasColumnName("old_z");

                    b.Property<int>("Pk")
                        .HasColumnType("int")
                        .HasColumnName("PK");

                    b.Property<int>("Pkpardon")
                        .HasColumnType("int")
                        .HasColumnName("PKpardon");

                    b.Property<int>("PledgeDismissTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_dismiss_time");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<byte>("PledgeLeaveStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("pledge_leave_status");

                    b.Property<int>("PledgeLeaveTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_leave_time");

                    b.Property<int>("PledgeOustedTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_ousted_time");

                    b.Property<int>("PledgeWithdrawTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_withdraw_time");

                    b.Property<byte[]>("PowerFlag")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("binary(32)")
                        .HasColumnName("power_flag")
                        .IsFixedLength(true);

                    b.Property<byte[]>("QuestFlag")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("binary(32)")
                        .HasColumnName("quest_flag")
                        .IsFixedLength(true);

                    b.Property<string>("QuestMemo")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("char(32)")
                        .HasColumnName("quest_memo")
                        .IsFixedLength(true)
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint")
                        .HasColumnName("race");

                    b.Property<int>("Sp")
                        .HasColumnType("int")
                        .HasColumnName("SP");

                    b.Property<int>("StBack")
                        .HasColumnType("int")
                        .HasColumnName("ST_back");

                    b.Property<int>("StBothHand")
                        .HasColumnType("int")
                        .HasColumnName("ST_both_hand");

                    b.Property<int>("StChest")
                        .HasColumnType("int")
                        .HasColumnName("ST_chest");

                    b.Property<int>("StFeet")
                        .HasColumnType("int")
                        .HasColumnName("ST_feet");

                    b.Property<int>("StGloves")
                        .HasColumnType("int")
                        .HasColumnName("ST_gloves");

                    b.Property<int>("StHead")
                        .HasColumnType("int")
                        .HasColumnName("ST_head");

                    b.Property<int>("StLeftEar")
                        .HasColumnType("int")
                        .HasColumnName("ST_left_ear");

                    b.Property<int>("StLeftFinger")
                        .HasColumnType("int")
                        .HasColumnName("ST_left_finger");

                    b.Property<int>("StLeftHand")
                        .HasColumnType("int")
                        .HasColumnName("ST_left_hand");

                    b.Property<int>("StLegs")
                        .HasColumnType("int")
                        .HasColumnName("ST_legs");

                    b.Property<int>("StNeck")
                        .HasColumnType("int")
                        .HasColumnName("ST_neck");

                    b.Property<int>("StRightEar")
                        .HasColumnType("int")
                        .HasColumnName("ST_right_ear");

                    b.Property<int>("StRightFinger")
                        .HasColumnType("int")
                        .HasColumnName("ST_right_finger");

                    b.Property<int>("StRightHand")
                        .HasColumnType("int")
                        .HasColumnName("ST_right_hand");

                    b.Property<int>("StUnderware")
                        .HasColumnType("int")
                        .HasColumnName("ST_underware");

                    b.Property<int>("SurrenderWarId")
                        .HasColumnType("int")
                        .HasColumnName("surrender_war_id");

                    b.Property<DateTime?>("TempDeleteDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("temp_delete_date");

                    b.Property<int>("UseTime")
                        .HasColumnType("int")
                        .HasColumnName("use_time");

                    b.Property<short>("World")
                        .HasColumnType("smallint")
                        .HasColumnName("world");

                    b.Property<int>("Xloc")
                        .HasColumnType("int")
                        .HasColumnName("xloc");

                    b.Property<int>("Yloc")
                        .HasColumnType("int")
                        .HasColumnName("yloc");

                    b.Property<int>("Zloc")
                        .HasColumnType("int")
                        .HasColumnName("zloc");

                    b.ToTable("user_data_temp");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserDatum", b =>
                {
                    b.Property<int>("CharId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("char_id")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("AioId")
                        .HasColumnType("int")
                        .HasColumnName("aio_id");

                    b.Property<int>("AioTimestamp")
                        .HasColumnType("int")
                        .HasColumnName("aio_timestamp");

                    b.Property<int>("Align")
                        .HasColumnType("int")
                        .HasColumnName("align");

                    b.Property<int>("Augmentation")
                        .HasColumnType("int")
                        .HasColumnName("augmentation");

                    b.Property<byte>("Builder")
                        .HasColumnType("tinyint")
                        .HasColumnName("builder");

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint")
                        .HasColumnName("class");

                    b.Property<double>("Cp")
                        .HasColumnType("float")
                        .HasColumnName("cp");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DropExp")
                        .HasColumnType("int")
                        .HasColumnName("drop_exp");

                    b.Property<int>("Duel")
                        .HasColumnType("int");

                    b.Property<int>("EffectiveMana0")
                        .HasColumnType("int")
                        .HasColumnName("effective_mana0");

                    b.Property<int>("EffectiveMana1")
                        .HasColumnType("int")
                        .HasColumnName("effective_mana1");

                    b.Property<int>("EffectiveMana2")
                        .HasColumnType("int")
                        .HasColumnName("effective_mana2");

                    b.Property<int>("EffectiveMana3")
                        .HasColumnType("int")
                        .HasColumnName("effective_mana3");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("FaceIndex")
                        .HasColumnType("int")
                        .HasColumnName("face_index");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint")
                        .HasColumnName("gender");

                    b.Property<int>("HairColorIndex")
                        .HasColumnType("int")
                        .HasColumnName("hair_color_index");

                    b.Property<int>("HairShapeIndex")
                        .HasColumnType("int")
                        .HasColumnName("hair_shape_index");

                    b.Property<int>("HardwareId")
                        .HasColumnType("int")
                        .HasColumnName("hardware_id");

                    b.Property<double>("Hp")
                        .HasColumnType("float")
                        .HasColumnName("HP");

                    b.Property<short>("IsInVehicle")
                        .HasColumnType("smallint");

                    b.Property<int>("JoinPledgeLevel")
                        .HasColumnType("int");

                    b.Property<byte>("Lev")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Login")
                        .HasColumnType("datetime")
                        .HasColumnName("login");

                    b.Property<DateTime?>("Logout")
                        .HasColumnType("datetime")
                        .HasColumnName("logout");

                    b.Property<string>("LongHardwareId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("long_hardware_id")
                        .HasDefaultValueSql("(N'00000000000000000000000000000000')");

                    b.Property<double>("MaxCp")
                        .HasColumnType("float")
                        .HasColumnName("max_cp");

                    b.Property<int>("MaxHp")
                        .HasColumnType("int")
                        .HasColumnName("max_hp");

                    b.Property<int>("MaxMp")
                        .HasColumnType("int")
                        .HasColumnName("max_mp");

                    b.Property<double>("Mp")
                        .HasColumnType("float")
                        .HasColumnName("MP");

                    b.Property<int>("NameColor")
                        .HasColumnType("int")
                        .HasColumnName("name_color");

                    b.Property<string>("Nickname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nickname")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("OldX")
                        .HasColumnType("int")
                        .HasColumnName("old_x");

                    b.Property<int?>("OldY")
                        .HasColumnType("int")
                        .HasColumnName("old_y");

                    b.Property<int?>("OldZ")
                        .HasColumnType("int")
                        .HasColumnName("old_z");

                    b.Property<int>("Pk")
                        .HasColumnType("int")
                        .HasColumnName("PK");

                    b.Property<int>("Pkpardon")
                        .HasColumnType("int")
                        .HasColumnName("PKpardon");

                    b.Property<int>("PledgeDismissTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_dismiss_time");

                    b.Property<int>("PledgeId")
                        .HasColumnType("int")
                        .HasColumnName("pledge_id");

                    b.Property<byte>("PledgeLeaveStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("pledge_leave_status");

                    b.Property<int>("PledgeLeaveTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_leave_time");

                    b.Property<int>("PledgeOustedTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_ousted_time");

                    b.Property<int>("PledgeType")
                        .HasColumnType("int");

                    b.Property<int>("PledgeWithdrawTime")
                        .HasColumnType("int")
                        .HasColumnName("pledge_withdraw_time");

                    b.Property<byte[]>("PowerFlag")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("binary(32)")
                        .HasColumnName("power_flag")
                        .HasDefaultValueSql("(0x0000000000000000000000000000000000000000000000000000000000000000)")
                        .IsFixedLength(true);

                    b.Property<byte[]>("QuestFlag")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("binary(32)")
                        .HasColumnName("quest_flag")
                        .HasDefaultValueSql("(0x00)")
                        .IsFixedLength(true);

                    b.Property<string>("QuestMemo")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("char(32)")
                        .HasColumnName("quest_memo")
                        .IsFixedLength(true)
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint")
                        .HasColumnName("race");

                    b.Property<byte>("Rank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((6))");

                    b.Property<int>("Sp")
                        .HasColumnType("int")
                        .HasColumnName("SP");

                    b.Property<int>("SpiritCount")
                        .HasColumnType("int")
                        .HasColumnName("spirit_count");

                    b.Property<int>("SponsorId")
                        .HasColumnType("int")
                        .HasColumnName("sponsor_id");

                    b.Property<int?>("SsqDawnRound")
                        .HasColumnType("int")
                        .HasColumnName("ssq_dawn_round");

                    b.Property<int>("StBack")
                        .HasColumnType("int")
                        .HasColumnName("ST_back");

                    b.Property<int>("StBothHand")
                        .HasColumnType("int")
                        .HasColumnName("ST_both_hand");

                    b.Property<int>("StChest")
                        .HasColumnType("int")
                        .HasColumnName("ST_chest");

                    b.Property<int>("StFeet")
                        .HasColumnType("int")
                        .HasColumnName("ST_feet");

                    b.Property<int>("StGloves")
                        .HasColumnType("int")
                        .HasColumnName("ST_gloves");

                    b.Property<int>("StHair")
                        .HasColumnType("int")
                        .HasColumnName("ST_hair");

                    b.Property<int>("StHairAll")
                        .HasColumnType("int")
                        .HasColumnName("ST_hair_all");

                    b.Property<int>("StHairDeco")
                        .HasColumnType("int")
                        .HasColumnName("ST_hair_deco");

                    b.Property<int>("StHead")
                        .HasColumnType("int")
                        .HasColumnName("ST_head");

                    b.Property<int>("StLeftEar")
                        .HasColumnType("int")
                        .HasColumnName("ST_left_ear");

                    b.Property<int>("StLeftFinger")
                        .HasColumnType("int")
                        .HasColumnName("ST_left_finger");

                    b.Property<int>("StLeftHand")
                        .HasColumnType("int")
                        .HasColumnName("ST_left_hand");

                    b.Property<int>("StLegs")
                        .HasColumnType("int")
                        .HasColumnName("ST_legs");

                    b.Property<int>("StNeck")
                        .HasColumnType("int")
                        .HasColumnName("ST_neck");

                    b.Property<int>("StRightEar")
                        .HasColumnType("int")
                        .HasColumnName("ST_right_ear");

                    b.Property<int>("StRightFinger")
                        .HasColumnType("int")
                        .HasColumnName("ST_right_finger");

                    b.Property<int>("StRightHand")
                        .HasColumnType("int")
                        .HasColumnName("ST_right_hand");

                    b.Property<int>("StUnderware")
                        .HasColumnType("int")
                        .HasColumnName("ST_underware");

                    b.Property<int>("Subjob0Class")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subjob0_class")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("Subjob1Class")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subjob1_class")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("Subjob2Class")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subjob2_class")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("Subjob3Class")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subjob3_class")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int?>("SubjobId")
                        .HasColumnType("int")
                        .HasColumnName("subjob_id");

                    b.Property<int>("SurrenderWarId")
                        .HasColumnType("int")
                        .HasColumnName("surrender_war_id");

                    b.Property<DateTime?>("TempDeleteDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("temp_delete_date");

                    b.Property<int>("TitleColor")
                        .HasColumnType("int")
                        .HasColumnName("title_color");

                    b.Property<int>("UseTime")
                        .HasColumnType("int")
                        .HasColumnName("use_time");

                    b.Property<int>("VipLevel")
                        .HasColumnType("int")
                        .HasColumnName("vip_level");

                    b.Property<int>("VipTimestamp")
                        .HasColumnType("int")
                        .HasColumnName("vip_timestamp");

                    b.Property<int>("VisualArmorId")
                        .HasColumnType("int")
                        .HasColumnName("visual_armor_id");

                    b.Property<short>("World")
                        .HasColumnType("smallint")
                        .HasColumnName("world");

                    b.Property<int>("Xloc")
                        .HasColumnType("int")
                        .HasColumnName("xloc");

                    b.Property<int>("Yloc")
                        .HasColumnType("int")
                        .HasColumnName("yloc");

                    b.Property<int>("Zloc")
                        .HasColumnType("int")
                        .HasColumnName("zloc");

                    b.HasKey("CharId");

                    b.HasIndex(new[] { "CharName" }, "idx_user_data1")
                        .IsUnique()
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "AccountId" }, "idx_user_data_1")
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "AccountName" }, "idx_user_data_account_name")
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "PledgeId" }, "idx_user_data_pledge")
                        .HasFillFactor(90);

                    b.ToTable("user_data");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserDeleted", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("delete_date");

                    b.ToTable("user_deleted");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserFriend", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("FriendCharId")
                        .HasColumnType("int")
                        .HasColumnName("friend_char_id");

                    b.Property<string>("FriendCharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("friend_char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasKey("CharId", "FriendCharId");

                    b.ToTable("user_friend");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserHenna", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Henna1")
                        .HasColumnType("int")
                        .HasColumnName("henna_1");

                    b.Property<int>("Henna2")
                        .HasColumnType("int")
                        .HasColumnName("henna_2");

                    b.Property<int>("Henna3")
                        .HasColumnType("int")
                        .HasColumnName("henna_3");

                    b.Property<int?>("SubjobId")
                        .HasColumnType("int")
                        .HasColumnName("subjob_id");

                    b.HasKey("CharId");

                    b.ToTable("user_henna");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserHistory", b =>
                {
                    b.Property<string>("AccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<byte>("LogAction")
                        .HasColumnType("tinyint")
                        .HasColumnName("log_action");

                    b.Property<DateTime>("LogDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("log_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasIndex(new[] { "CharName" }, "IX_user_history")
                        .HasFillFactor(90);

                    b.ToTable("user_history");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserInstance", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("InstanceId")
                        .HasColumnType("int")
                        .HasColumnName("instance_id");

                    b.Property<int>("ReuseTimeout")
                        .HasColumnType("int")
                        .HasColumnName("reuse_timeout");

                    b.Property<int>("TimeSpent")
                        .HasColumnType("int")
                        .HasColumnName("time_spent");

                    b.ToTable("user_instance");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("item_id")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("Augmentation")
                        .HasColumnType("int")
                        .HasColumnName("augmentation");

                    b.Property<byte>("Bless")
                        .HasColumnType("tinyint")
                        .HasColumnName("bless");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("Eroded")
                        .HasColumnType("int")
                        .HasColumnName("eroded");

                    b.Property<int>("Ident")
                        .HasColumnType("int")
                        .HasColumnName("ident");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int>("LifeTime")
                        .HasColumnType("int")
                        .HasColumnName("life_time");

                    b.Property<int>("ManaLeft")
                        .HasColumnType("int")
                        .HasColumnName("mana_left");

                    b.Property<int>("ProtectionTimeout")
                        .HasColumnType("int")
                        .HasColumnName("protection_timeout");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.Property<byte>("Wished")
                        .HasColumnType("tinyint")
                        .HasColumnName("wished");

                    b.HasKey("ItemId")
                        .HasName("pk_user_item")
                        .IsClustered(false);

                    b.HasIndex(new[] { "ItemType" }, "idx_item_type")
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "CharId" }, "idx_user_item_charid")
                        .IsClustered()
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "Warehouse" }, "idx_useritem_ware")
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "Warehouse" }, "idx_warehouse")
                        .HasFillFactor(90);

                    b.ToTable("user_item");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserJournal", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int?>("IntData1")
                        .HasColumnType("int")
                        .HasColumnName("int_data_1");

                    b.Property<int?>("IntData2")
                        .HasColumnType("int")
                        .HasColumnName("int_data_2");

                    b.Property<DateTime>("LogData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("log_data")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PlayTime")
                        .HasColumnType("int")
                        .HasColumnName("play_time");

                    b.Property<short>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("type");

                    b.ToTable("user_journal");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserLog", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<DateTime?>("LogDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("log_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("LogFrom")
                        .HasColumnType("int")
                        .HasColumnName("log_from");

                    b.Property<byte?>("LogId")
                        .HasColumnType("tinyint")
                        .HasColumnName("log_id");

                    b.Property<int?>("LogTo")
                        .HasColumnType("int")
                        .HasColumnName("log_to");

                    b.Property<int?>("SubjobId")
                        .HasColumnType("int")
                        .HasColumnName("subjob_id");

                    b.Property<int?>("UseTime")
                        .HasColumnType("int")
                        .HasColumnName("use_time");

                    b.HasIndex(new[] { "CharId", "LogId", "LogTo" }, "IX_user_log")
                        .IsClustered()
                        .HasFillFactor(90);

                    b.ToTable("user_log");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserMacro", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<string>("MacroIconname")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("macro_iconname")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int?>("MacroIcontype")
                        .HasColumnType("int")
                        .HasColumnName("macro_icontype");

                    b.Property<int>("MacroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("macro_id")
                        .UseIdentityColumn();

                    b.Property<string>("MacroName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("macro_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<string>("MacroTooltip")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("macro_tooltip")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasIndex(new[] { "CharId", "MacroId" }, "IX_user_macro")
                        .IsUnique()
                        .IsClustered();

                    b.ToTable("user_macro");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserMacroinfo", b =>
                {
                    b.Property<int>("MacroId")
                        .HasColumnType("int")
                        .HasColumnName("macro_id");

                    b.Property<int?>("MacroInt1")
                        .HasColumnType("int")
                        .HasColumnName("macro_int1");

                    b.Property<int?>("MacroInt2")
                        .HasColumnType("int")
                        .HasColumnName("macro_int2");

                    b.Property<int?>("MacroInt3")
                        .HasColumnType("int")
                        .HasColumnName("macro_int3");

                    b.Property<int?>("MacroOrder")
                        .HasColumnType("int")
                        .HasColumnName("macro_order");

                    b.Property<string>("MacroStr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("macro_str")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasIndex(new[] { "MacroId", "MacroOrder" }, "IX_user_macroinfo")
                        .IsClustered()
                        .HasFillFactor(90);

                    b.ToTable("user_macroinfo");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserMail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(3500)
                        .HasColumnType("nvarchar(3500)")
                        .HasColumnName("content")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("title")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_user_mail_1");

                    b.ToTable("user_mail");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserMailReceiver", b =>
                {
                    b.Property<byte>("Deleted")
                        .HasColumnType("tinyint")
                        .HasColumnName("deleted");

                    b.Property<int>("MailId")
                        .HasColumnType("int")
                        .HasColumnName("mail_id");

                    b.Property<byte>("MailboxType")
                        .HasColumnType("tinyint")
                        .HasColumnName("mailbox_type");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime")
                        .HasColumnName("read_date");

                    b.Property<byte>("ReadStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("read_status");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiver_id");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("receiver_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasIndex(new[] { "MailId" }, "IX_user_mail_receiver_1");

                    b.HasIndex(new[] { "ReceiverId", "ReadStatus", "Deleted" }, "IX_user_mail_receiver_2");

                    b.ToTable("user_mail_receiver");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserMailSender", b =>
                {
                    b.Property<byte>("Deleted")
                        .HasColumnType("tinyint")
                        .HasColumnName("deleted");

                    b.Property<int>("MailId")
                        .HasColumnType("int")
                        .HasColumnName("mail_id");

                    b.Property<byte>("MailType")
                        .HasColumnType("tinyint")
                        .HasColumnName("mail_type");

                    b.Property<byte>("MailboxType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("mailbox_type")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ReceiverNameList")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("receiver_name_list")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int")
                        .HasColumnName("related_id");

                    b.Property<DateTime>("SendDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("send_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sender_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasIndex(new[] { "SenderId", "MailboxType", "Deleted" }, "IX_user_mail_sender")
                        .IsClustered();

                    b.HasIndex(new[] { "MailId" }, "IX_user_mail_sender_1");

                    b.ToTable("user_mail_sender");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserNameColor", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("ColorRgb")
                        .HasColumnType("int")
                        .HasColumnName("color_rgb");

                    b.HasKey("CharId");

                    b.ToTable("user_name_color");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserNameReserved", b =>
                {
                    b.Property<string>("CharName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<byte>("Used")
                        .HasColumnType("tinyint")
                        .HasColumnName("used");

                    b.HasKey("CharName");

                    b.ToTable("user_name_reserved");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserNewbie", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<short>("NewbieStat")
                        .HasColumnType("smallint")
                        .HasColumnName("newbie_stat");

                    b.HasKey("AccountId");

                    b.ToTable("user_newbie");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserNobless", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<byte?>("HeroType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("hero_type")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("HistoryOpen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("history_open")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MatchCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("match_count")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("NoblessType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("nobless_type")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OlympiadLoseCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("olympiad_lose_count")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OlympiadPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("olympiad_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OlympiadWinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("olympiad_win_count")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PreviousPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("previous_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("WinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("win_count")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Words")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("words")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasKey("CharId")
                        .HasName("PK__user_nob__2D4B233921DF2C68");

                    b.ToTable("user_nobless");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserPin", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Pin")
                        .HasColumnType("int")
                        .HasColumnName("pin");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int")
                        .HasColumnName("timestamp");

                    b.ToTable("user_pin");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserProhibit", b =>
                {
                    b.Property<string>("CharName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("char_name")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasKey("CharName");

                    b.ToTable("user_prohibit");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserProhibitWord", b =>
                {
                    b.Property<string>("Words")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("words")
                        .HasComment("Korean_Wansung_CI_AS");

                    b.HasKey("Words");

                    b.ToTable("user_prohibit_word");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserPunish", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<DateTime?>("PunishDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("punish_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PunishId")
                        .HasColumnType("int")
                        .HasColumnName("punish_id");

                    b.Property<byte>("PunishOn")
                        .HasColumnType("tinyint")
                        .HasColumnName("punish_on");

                    b.Property<int?>("PunishSeconds")
                        .HasColumnType("int")
                        .HasColumnName("punish_seconds");

                    b.Property<int?>("RemainGame")
                        .HasColumnType("int")
                        .HasColumnName("remain_game");

                    b.Property<int?>("RemainReal")
                        .HasColumnType("int")
                        .HasColumnName("remain_real");

                    b.HasIndex(new[] { "CharId", "PunishId" }, "IX_user_punish")
                        .HasFillFactor(90);

                    b.ToTable("user_punish");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserRebirth", b =>
                {
                    b.Property<int>("AvailablePoints")
                        .HasColumnType("int")
                        .HasColumnName("available_points");

                    b.Property<int>("BonusCon")
                        .HasColumnType("int")
                        .HasColumnName("bonus_con");

                    b.Property<int>("BonusDex")
                        .HasColumnType("int")
                        .HasColumnName("bonus_dex");

                    b.Property<int>("BonusInt")
                        .HasColumnType("int")
                        .HasColumnName("bonus_int");

                    b.Property<int>("BonusMen")
                        .HasColumnType("int")
                        .HasColumnName("bonus_men");

                    b.Property<int>("BonusStr")
                        .HasColumnType("int")
                        .HasColumnName("bonus_str");

                    b.Property<int>("BonusWit")
                        .HasColumnType("int")
                        .HasColumnName("bonus_wit");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("RebirthCount")
                        .HasColumnType("int")
                        .HasColumnName("rebirth_count");

                    b.Property<int>("SubjobId")
                        .HasColumnType("int")
                        .HasColumnName("subjob_id");

                    b.ToTable("user_rebirth");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserRecipe", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int")
                        .HasColumnName("recipe_id");

                    b.HasKey("CharId", "RecipeId");

                    b.ToTable("user_recipe");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserSchemeBuffer", b =>
                {
                    b.Property<int>("B0")
                        .HasColumnType("int")
                        .HasColumnName("b0");

                    b.Property<int>("B1")
                        .HasColumnType("int")
                        .HasColumnName("b1");

                    b.Property<int>("B10")
                        .HasColumnType("int")
                        .HasColumnName("b10");

                    b.Property<int>("B11")
                        .HasColumnType("int")
                        .HasColumnName("b11");

                    b.Property<int>("B12")
                        .HasColumnType("int")
                        .HasColumnName("b12");

                    b.Property<int>("B13")
                        .HasColumnType("int")
                        .HasColumnName("b13");

                    b.Property<int>("B14")
                        .HasColumnType("int")
                        .HasColumnName("b14");

                    b.Property<int>("B15")
                        .HasColumnType("int")
                        .HasColumnName("b15");

                    b.Property<int>("B16")
                        .HasColumnType("int")
                        .HasColumnName("b16");

                    b.Property<int>("B17")
                        .HasColumnType("int")
                        .HasColumnName("b17");

                    b.Property<int>("B18")
                        .HasColumnType("int")
                        .HasColumnName("b18");

                    b.Property<int>("B19")
                        .HasColumnType("int")
                        .HasColumnName("b19");

                    b.Property<int>("B2")
                        .HasColumnType("int")
                        .HasColumnName("b2");

                    b.Property<int>("B20")
                        .HasColumnType("int")
                        .HasColumnName("b20");

                    b.Property<int>("B21")
                        .HasColumnType("int")
                        .HasColumnName("b21");

                    b.Property<int>("B22")
                        .HasColumnType("int")
                        .HasColumnName("b22");

                    b.Property<int>("B23")
                        .HasColumnType("int")
                        .HasColumnName("b23");

                    b.Property<int>("B24")
                        .HasColumnType("int")
                        .HasColumnName("b24");

                    b.Property<int>("B25")
                        .HasColumnType("int")
                        .HasColumnName("b25");

                    b.Property<int>("B26")
                        .HasColumnType("int")
                        .HasColumnName("b26");

                    b.Property<int>("B27")
                        .HasColumnType("int")
                        .HasColumnName("b27");

                    b.Property<int>("B28")
                        .HasColumnType("int")
                        .HasColumnName("b28");

                    b.Property<int>("B29")
                        .HasColumnType("int")
                        .HasColumnName("b29");

                    b.Property<int>("B3")
                        .HasColumnType("int")
                        .HasColumnName("b3");

                    b.Property<int>("B30")
                        .HasColumnType("int")
                        .HasColumnName("b30");

                    b.Property<int>("B31")
                        .HasColumnType("int")
                        .HasColumnName("b31");

                    b.Property<int>("B32")
                        .HasColumnType("int")
                        .HasColumnName("b32");

                    b.Property<int>("B33")
                        .HasColumnType("int")
                        .HasColumnName("b33");

                    b.Property<int>("B34")
                        .HasColumnType("int")
                        .HasColumnName("b34");

                    b.Property<int>("B35")
                        .HasColumnType("int")
                        .HasColumnName("b35");

                    b.Property<int>("B36")
                        .HasColumnType("int")
                        .HasColumnName("b36");

                    b.Property<int>("B37")
                        .HasColumnType("int")
                        .HasColumnName("b37");

                    b.Property<int>("B38")
                        .HasColumnType("int")
                        .HasColumnName("b38");

                    b.Property<int>("B39")
                        .HasColumnType("int")
                        .HasColumnName("b39");

                    b.Property<int>("B4")
                        .HasColumnType("int")
                        .HasColumnName("b4");

                    b.Property<int>("B40")
                        .HasColumnType("int")
                        .HasColumnName("b40");

                    b.Property<int>("B41")
                        .HasColumnType("int")
                        .HasColumnName("b41");

                    b.Property<int>("B42")
                        .HasColumnType("int")
                        .HasColumnName("b42");

                    b.Property<int>("B43")
                        .HasColumnType("int")
                        .HasColumnName("b43");

                    b.Property<int>("B44")
                        .HasColumnType("int")
                        .HasColumnName("b44");

                    b.Property<int>("B45")
                        .HasColumnType("int")
                        .HasColumnName("b45");

                    b.Property<int>("B46")
                        .HasColumnType("int")
                        .HasColumnName("b46");

                    b.Property<int>("B47")
                        .HasColumnType("int")
                        .HasColumnName("b47");

                    b.Property<int>("B5")
                        .HasColumnType("int")
                        .HasColumnName("b5");

                    b.Property<int>("B6")
                        .HasColumnType("int")
                        .HasColumnName("b6");

                    b.Property<int>("B7")
                        .HasColumnType("int")
                        .HasColumnName("b7");

                    b.Property<int>("B8")
                        .HasColumnType("int")
                        .HasColumnName("b8");

                    b.Property<int>("B9")
                        .HasColumnType("int")
                        .HasColumnName("b9");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("SubjobIndex")
                        .HasColumnType("int")
                        .HasColumnName("subjob_index");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.ToTable("user_scheme_buffer");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserSkill", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skill_id");

                    b.Property<int>("SubjobId")
                        .HasColumnType("int")
                        .HasColumnName("subjob_id");

                    b.Property<byte>("SkillLev")
                        .HasColumnType("tinyint")
                        .HasColumnName("skill_lev");

                    b.Property<int>("ToEndTime")
                        .HasColumnType("int")
                        .HasColumnName("to_end_time");

                    b.HasKey("CharId", "SkillId", "SubjobId");

                    b.HasIndex(new[] { "SkillLev" }, "idx_skill_lev")
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "ToEndTime" }, "idx_skill_toend")
                        .HasFillFactor(90);

                    b.ToTable("user_skill");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserSkillOld", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skill_id");

                    b.Property<byte>("SkillLev")
                        .HasColumnType("tinyint")
                        .HasColumnName("skill_lev");

                    b.Property<int>("ToEndTime")
                        .HasColumnType("int")
                        .HasColumnName("to_end_time");

                    b.ToTable("user_skill_old");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserSociality", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<DateTime>("LastChanged")
                        .HasColumnType("datetime")
                        .HasColumnName("last_changed");

                    b.Property<int>("Sociality")
                        .HasColumnType("int")
                        .HasColumnName("sociality");

                    b.Property<int>("UsedSulffrage")
                        .HasColumnType("int")
                        .HasColumnName("used_sulffrage");

                    b.HasKey("CharId");

                    b.ToTable("user_sociality");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserSubjob", b =>
                {
                    b.Property<int?>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<int?>("Exp")
                        .HasColumnType("int")
                        .HasColumnName("exp");

                    b.Property<int?>("Henna1")
                        .HasColumnType("int")
                        .HasColumnName("henna_1");

                    b.Property<int?>("Henna2")
                        .HasColumnType("int")
                        .HasColumnName("henna_2");

                    b.Property<int?>("Henna3")
                        .HasColumnType("int")
                        .HasColumnName("henna_3");

                    b.Property<double?>("Hp")
                        .HasColumnType("float")
                        .HasColumnName("hp");

                    b.Property<byte?>("Level")
                        .HasColumnType("tinyint")
                        .HasColumnName("level");

                    b.Property<double?>("Mp")
                        .HasColumnType("float")
                        .HasColumnName("mp");

                    b.Property<int?>("Sp")
                        .HasColumnType("int")
                        .HasColumnName("sp");

                    b.Property<int?>("SubjobId")
                        .HasColumnType("int")
                        .HasColumnName("subjob_id");

                    b.ToTable("user_subjob");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserSurrender", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("SurrenderWarId")
                        .HasColumnType("int")
                        .HasColumnName("surrender_war_id");

                    b.ToTable("user_surrender");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserVote", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int>("VotePoints")
                        .HasColumnType("int")
                        .HasColumnName("vote_points");

                    b.Property<int>("VoteTimestamp")
                        .HasColumnType("int")
                        .HasColumnName("vote_timestamp");

                    b.ToTable("user_vote");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserWarehouse", b =>
                {
                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<byte>("Bless")
                        .HasColumnType("tinyint")
                        .HasColumnName("bless");

                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("Enchant")
                        .HasColumnType("int")
                        .HasColumnName("enchant");

                    b.Property<int>("Eroded")
                        .HasColumnType("int")
                        .HasColumnName("eroded");

                    b.Property<byte>("Ident")
                        .HasColumnType("tinyint")
                        .HasColumnName("ident");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasColumnName("item_type");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int")
                        .HasColumnName("warehouse");

                    b.Property<byte?>("Wished")
                        .HasColumnType("tinyint")
                        .HasColumnName("wished");

                    b.HasIndex(new[] { "CharId" }, "idx_user_warehouse_charid")
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "ItemId" }, "idx_user_warehouse_itemid")
                        .IsUnique()
                        .HasFillFactor(90);

                    b.HasIndex(new[] { "ItemType" }, "idx_user_warehouse_itemtype")
                        .HasFillFactor(90);

                    b.ToTable("user_warehouse");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.UserWedding", b =>
                {
                    b.Property<int>("CharId")
                        .HasColumnType("int")
                        .HasColumnName("char_id");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int")
                        .HasColumnName("partner_id");

                    b.Property<string>("PartnerName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("partner_name")
                        .HasDefaultValueSql("(N'')");

                    b.Property<int>("PenaltyTimeout")
                        .HasColumnType("int")
                        .HasColumnName("penalty_timeout");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<int>("TeleportTimeout")
                        .HasColumnType("int")
                        .HasColumnName("teleport_timeout");

                    b.Property<int>("WeddingTime")
                        .HasColumnType("int")
                        .HasColumnName("wedding_time");

                    b.ToTable("user_wedding");
                });

            modelBuilder.Entity("MigrationIssueSample.Entities.WarDeclare", b =>
                {
                    b.Property<int>("Challenger")
                        .HasColumnType("int")
                        .HasColumnName("challenger");

                    b.Property<int>("Challengee")
                        .HasColumnType("int")
                        .HasColumnName("challengee");

                    b.Property<int>("DeclareTime")
                        .HasColumnType("int")
                        .HasColumnName("declare_time");

                    b.HasKey("Challenger", "Challengee");

                    b.ToTable("war_declare");
                });
#pragma warning restore 612, 618
        }
    }
}
